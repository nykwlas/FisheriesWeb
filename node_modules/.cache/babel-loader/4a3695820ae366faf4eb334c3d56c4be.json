{"ast":null,"code":"import _objectSpread from\"/home/nicolas/FisheriesWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/nicolas/FisheriesWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import app from'firebase/app';import'firebase/auth';import'firebase/database';var config={apiKey:\" AIzaSyAS75DYoT6jkHCC4lixCd0ECE3-Hx5ExLs\",authDomain:\"fisheries-2c0cb.firebaseapp.com\",databaseURL:\"https://fisheries-2c0cb.firebaseio.com/\",projectId:\"fisheries-2c0cb\",storageBucket:\"gs://fisheries-2c0cb.appspot.com\",messagingSenderId:\"712940355681\",appId:\"1:712940355681:web:e4d035dd7dbd4781c62a20\"};var Firebase=function Firebase(){var _this=this;_classCallCheck(this,Firebase);this.doCreateUserWithEmailAndPassword=function(email,password){return _this.auth.createUserWithEmailAndPassword(email,password);};this.doSignInWithEmailAndPassword=function(email,password){return _this.auth.signInWithEmailAndPassword(email,password);};this.doSignInWithGoogle=function(){return _this.auth.signInWithPopup(_this.googleProvider);};this.doSignInWithFacebook=function(){return _this.auth.signInWithPopup(_this.facebookProvider);};this.doSignInWithTwitter=function(){return _this.auth.signInWithPopup(_this.twitterProvider);};this.doSignOut=function(){return _this.auth.signOut();};this.doPasswordReset=function(email){return _this.auth.sendPasswordResetEmail(email);};this.doSendEmailVerification=function(){return _this.auth.currentUser.sendEmailVerification({url:\"http://localhost:3000\"});};this.doPasswordUpdate=function(password){return _this.auth.currentUser.updatePassword(password);};this.onAuthUserListener=function(next,fallback){return _this.auth.onAuthStateChanged(function(authUser){if(authUser){_this.user(authUser.uid).once('value').then(function(snapshot){var dbUser=snapshot.val();// default empty roles\nif(!dbUser.roles){dbUser.roles={};}// merge auth and db user\nauthUser=_objectSpread({uid:authUser.uid,email:authUser.email,emailVerified:authUser.emailVerified,providerData:authUser.providerData},dbUser);next(authUser);});}else{fallback();}});};this.user=function(uid){return _this.db.ref(\"users/\".concat(uid));};this.users=function(){return _this.db.ref('users');};this.message=function(uid){return _this.db.ref(\"messages/\".concat(uid));};this.messages=function(){return _this.db.ref('messages');};app.initializeApp(config);/* Helper */this.serverValue=app.database.ServerValue;this.emailAuthProvider=app.auth.EmailAuthProvider;/* Firebase APIs */this.auth=app.auth();this.db=app.database();/* Social Sign In Method Provider */this.googleProvider=new app.auth.GoogleAuthProvider();this.facebookProvider=new app.auth.FacebookAuthProvider();this.twitterProvider=new app.auth.TwitterAuthProvider();}// *** Auth API ***\n;export default Firebase;","map":{"version":3,"sources":["/home/nicolas/FisheriesWeb/src/components/Firebase/firebase.js"],"names":["app","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignInWithTwitter","twitterProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doSendEmailVerification","currentUser","sendEmailVerification","url","doPasswordUpdate","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","then","snapshot","dbUser","val","roles","emailVerified","providerData","db","ref","users","message","messages","initializeApp","serverValue","database","ServerValue","emailAuthProvider","EmailAuthProvider","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider"],"mappings":"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","sourcesContent":["import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: \" AIzaSyAS75DYoT6jkHCC4lixCd0ECE3-Hx5ExLs\",\n  authDomain: \"fisheries-2c0cb.firebaseapp.com\",\n  databaseURL: \"https://fisheries-2c0cb.firebaseio.com/\",\n  projectId: \"fisheries-2c0cb\",\n  storageBucket: \"gs://fisheries-2c0cb.appspot.com\",\n  messagingSenderId: \"712940355681\",\n  appId: \"1:712940355681:web:e4d035dd7dbd4781c62a20\",\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    /* Helper */\n\n    this.serverValue = app.database.ServerValue;\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\n\n    /* Firebase APIs */\n\n    this.auth = app.auth();\n    this.db = app.database();\n\n    /* Social Sign In Method Provider */\n\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\n    this.twitterProvider = new app.auth.TwitterAuthProvider();\n  }\n\n  // *** Auth API ***\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignInWithGoogle = () =>\n    this.auth.signInWithPopup(this.googleProvider);\n\n  doSignInWithFacebook = () =>\n    this.auth.signInWithPopup(this.facebookProvider);\n\n  doSignInWithTwitter = () =>\n    this.auth.signInWithPopup(this.twitterProvider);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doSendEmailVerification = () =>\n    this.auth.currentUser.sendEmailVerification({\n      url: \"http://localhost:3000\",\n    });\n\n  doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n\n  // *** Merge Auth and DB User API *** //\n\n  onAuthUserListener = (next, fallback) =>\n    this.auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        this.user(authUser.uid)\n          .once('value')\n          .then(snapshot => {\n            const dbUser = snapshot.val();\n\n            // default empty roles\n            if (!dbUser.roles) {\n              dbUser.roles = {};\n            }\n\n            // merge auth and db user\n            authUser = {\n              uid: authUser.uid,\n              email: authUser.email,\n              emailVerified: authUser.emailVerified,\n              providerData: authUser.providerData,\n              ...dbUser,\n            };\n\n            next(authUser);\n          });\n      } else {\n        fallback();\n      }\n    });\n\n  // *** User API ***\n\n  user = uid => this.db.ref(`users/${uid}`);\n\n  users = () => this.db.ref('users');\n\n  // *** Message API ***\n\n  message = uid => this.db.ref(`messages/${uid}`);\n\n  messages = () => this.db.ref('messages');\n}\n\nexport default Firebase;\n"]},"metadata":{},"sourceType":"module"}