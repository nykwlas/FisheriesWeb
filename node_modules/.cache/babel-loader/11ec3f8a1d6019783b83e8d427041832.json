{"ast":null,"code":"var _jsxFileName = \"/home/nicolas/fisheries/src/components/Messages/Messages.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport MessageList from './MessageList';\n\nclass Messages extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onListenForMessages = () => {\n      this.props.firebase.messages().orderByChild('createdAt').limitToLast(this.props.limit).on('value', snapshot => {\n        this.props.onSetMessages(snapshot.val());\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.onChangeText = event => {\n      this.setState({\n        text: event.target.value\n      });\n    };\n\n    this.onCreateMessage = (event, authUser) => {\n      this.props.firebase.messages().push({\n        text: this.state.text,\n        userId: authUser.uid,\n        createdAt: this.props.firebase.serverValue.TIMESTAMP\n      });\n      this.setState({\n        text: ''\n      });\n      event.preventDefault();\n    };\n\n    this.onEditMessage = (message, text) => {\n      const {\n        uid,\n        ...messageSnapshot\n      } = message;\n      this.props.firebase.message(message.uid).set({ ...messageSnapshot,\n        text,\n        editedAt: this.props.firebase.serverValue.TIMESTAMP\n      });\n    };\n\n    this.onRemoveMessage = uid => {\n      this.props.firebase.message(uid).remove();\n    };\n\n    this.onNextPage = () => {\n      this.props.onSetMessagesLimit(this.props.limit + 5);\n    };\n\n    this.state = {\n      text: '',\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.messages.length) {\n      this.setState({\n        loading: true\n      });\n    }\n\n    this.onListenForMessages();\n  }\n\n  componentDidUpdate(props) {\n    if (props.limit !== this.props.limit) {\n      this.onListenForMessages();\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.messages().off();\n  }\n\n  render() {\n    const {\n      messages\n    } = this.props;\n    const {\n      text,\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, !loading && messages && /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.onNextPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, \"More\"), loading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, \"Loading ...\"), messages && /*#__PURE__*/React.createElement(MessageList, {\n      authUser: this.props.authUser,\n      messages: messages,\n      onEditMessage: this.onEditMessage,\n      onRemoveMessage: this.onRemoveMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }), !messages && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 23\n      }\n    }, \"There are no messages ...\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: event => this.onCreateMessage(event, this.props.authUser),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: text,\n      onChange: this.onChangeText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, \"Send\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  authUser: state.sessionState.authUser,\n  messages: Object.keys(state.messageState.messages || {}).map(key => ({ ...state.messageState.messages[key],\n    uid: key\n  })),\n  limit: state.messageState.limit\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSetMessages: messages => dispatch({\n    type: 'MESSAGES_SET',\n    messages\n  }),\n  onSetMessagesLimit: limit => dispatch({\n    type: 'MESSAGES_LIMIT_SET',\n    limit\n  })\n});\n\nexport default compose(withFirebase, connect(mapStateToProps, mapDispatchToProps))(Messages);","map":{"version":3,"sources":["/home/nicolas/fisheries/src/components/Messages/Messages.js"],"names":["React","Component","connect","compose","withFirebase","MessageList","Messages","constructor","props","onListenForMessages","firebase","messages","orderByChild","limitToLast","limit","on","snapshot","onSetMessages","val","setState","loading","onChangeText","event","text","target","value","onCreateMessage","authUser","push","state","userId","uid","createdAt","serverValue","TIMESTAMP","preventDefault","onEditMessage","message","messageSnapshot","set","editedAt","onRemoveMessage","remove","onNextPage","onSetMessagesLimit","componentDidMount","length","componentDidUpdate","componentWillUnmount","off","render","mapStateToProps","sessionState","Object","keys","messageState","map","key","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAC/BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAuBnBC,mBAvBmB,GAuBG,MAAM;AAC1B,WAAKD,KAAL,CAAWE,QAAX,CACGC,QADH,GAEGC,YAFH,CAEgB,WAFhB,EAGGC,WAHH,CAGe,KAAKL,KAAL,CAAWM,KAH1B,EAIGC,EAJH,CAIM,OAJN,EAIeC,QAAQ,IAAI;AACvB,aAAKR,KAAL,CAAWS,aAAX,CAAyBD,QAAQ,CAACE,GAAT,EAAzB;AAEA,aAAKC,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD,OARH;AASD,KAjCkB;;AAAA,SAuCnBC,YAvCmB,GAuCJC,KAAK,IAAI;AACtB,WAAKH,QAAL,CAAc;AAAEI,QAAAA,IAAI,EAAED,KAAK,CAACE,MAAN,CAAaC;AAArB,OAAd;AACD,KAzCkB;;AAAA,SA2CnBC,eA3CmB,GA2CD,CAACJ,KAAD,EAAQK,QAAR,KAAqB;AACrC,WAAKnB,KAAL,CAAWE,QAAX,CAAoBC,QAApB,GAA+BiB,IAA/B,CAAoC;AAClCL,QAAAA,IAAI,EAAE,KAAKM,KAAL,CAAWN,IADiB;AAElCO,QAAAA,MAAM,EAAEH,QAAQ,CAACI,GAFiB;AAGlCC,QAAAA,SAAS,EAAE,KAAKxB,KAAL,CAAWE,QAAX,CAAoBuB,WAApB,CAAgCC;AAHT,OAApC;AAMA,WAAKf,QAAL,CAAc;AAAEI,QAAAA,IAAI,EAAE;AAAR,OAAd;AAEAD,MAAAA,KAAK,CAACa,cAAN;AACD,KArDkB;;AAAA,SAuDnBC,aAvDmB,GAuDH,CAACC,OAAD,EAAUd,IAAV,KAAmB;AACjC,YAAM;AAAEQ,QAAAA,GAAF;AAAO,WAAGO;AAAV,UAA8BD,OAApC;AAEA,WAAK7B,KAAL,CAAWE,QAAX,CAAoB2B,OAApB,CAA4BA,OAAO,CAACN,GAApC,EAAyCQ,GAAzC,CAA6C,EAC3C,GAAGD,eADwC;AAE3Cf,QAAAA,IAF2C;AAG3CiB,QAAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWE,QAAX,CAAoBuB,WAApB,CAAgCC;AAHC,OAA7C;AAKD,KA/DkB;;AAAA,SAiEnBO,eAjEmB,GAiEDV,GAAG,IAAI;AACvB,WAAKvB,KAAL,CAAWE,QAAX,CAAoB2B,OAApB,CAA4BN,GAA5B,EAAiCW,MAAjC;AACD,KAnEkB;;AAAA,SAqEnBC,UArEmB,GAqEN,MAAM;AACjB,WAAKnC,KAAL,CAAWoC,kBAAX,CAA8B,KAAKpC,KAAL,CAAWM,KAAX,GAAmB,CAAjD;AACD,KAvEkB;;AAGjB,SAAKe,KAAL,GAAa;AACXN,MAAAA,IAAI,EAAE,EADK;AAEXH,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAEDyB,EAAAA,iBAAiB,GAAG;AAClB,QAAI,CAAC,KAAKrC,KAAL,CAAWG,QAAX,CAAoBmC,MAAzB,EAAiC;AAC/B,WAAK3B,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD;;AAED,SAAKX,mBAAL;AACD;;AAEDsC,EAAAA,kBAAkB,CAACvC,KAAD,EAAQ;AACxB,QAAIA,KAAK,CAACM,KAAN,KAAgB,KAAKN,KAAL,CAAWM,KAA/B,EAAsC;AACpC,WAAKL,mBAAL;AACD;AACF;;AAcDuC,EAAAA,oBAAoB,GAAG;AACrB,SAAKxC,KAAL,CAAWE,QAAX,CAAoBC,QAApB,GAA+BsC,GAA/B;AACD;;AAoCDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEvC,MAAAA;AAAF,QAAe,KAAKH,KAA1B;AACA,UAAM;AAAEe,MAAAA,IAAF;AAAQH,MAAAA;AAAR,QAAoB,KAAKS,KAA/B;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACT,OAAD,IAAYT,QAAZ,iBACC;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKgC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAOGvB,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPd,EASGT,QAAQ,iBACP,oBAAC,WAAD;AACE,MAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWmB,QADvB;AAEE,MAAA,QAAQ,EAAEhB,QAFZ;AAGE,MAAA,aAAa,EAAE,KAAKyB,aAHtB;AAIE,MAAA,eAAe,EAAE,KAAKK,eAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,EAkBG,CAAC9B,QAAD,iBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAlBhB,eAoBE;AACE,MAAA,QAAQ,EAAEW,KAAK,IACb,KAAKI,eAAL,CAAqBJ,KAArB,EAA4B,KAAKd,KAAL,CAAWmB,QAAvC,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEJ,IAFT;AAGE,MAAA,QAAQ,EAAE,KAAKF,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAUE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,CApBF,CADF;AAmCD;;AAjH8B;;AAoHjC,MAAM8B,eAAe,GAAGtB,KAAK,KAAK;AAChCF,EAAAA,QAAQ,EAAEE,KAAK,CAACuB,YAAN,CAAmBzB,QADG;AAEhChB,EAAAA,QAAQ,EAAE0C,MAAM,CAACC,IAAP,CAAYzB,KAAK,CAAC0B,YAAN,CAAmB5C,QAAnB,IAA+B,EAA3C,EAA+C6C,GAA/C,CACRC,GAAG,KAAK,EACN,GAAG5B,KAAK,CAAC0B,YAAN,CAAmB5C,QAAnB,CAA4B8C,GAA5B,CADG;AAEN1B,IAAAA,GAAG,EAAE0B;AAFC,GAAL,CADK,CAFsB;AAQhC3C,EAAAA,KAAK,EAAEe,KAAK,CAAC0B,YAAN,CAAmBzC;AARM,CAAL,CAA7B;;AAWA,MAAM4C,kBAAkB,GAAGC,QAAQ,KAAK;AACtC1C,EAAAA,aAAa,EAAEN,QAAQ,IACrBgD,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE,cAAR;AAAwBjD,IAAAA;AAAxB,GAAD,CAF4B;AAGtCiC,EAAAA,kBAAkB,EAAE9B,KAAK,IACvB6C,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE,oBAAR;AAA8B9C,IAAAA;AAA9B,GAAD;AAJ4B,CAAL,CAAnC;;AAOA,eAAeX,OAAO,CACpBC,YADoB,EAEpBF,OAAO,CACLiD,eADK,EAELO,kBAFK,CAFa,CAAP,CAMbpD,QANa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport MessageList from './MessageList';\n\nclass Messages extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: '',\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.messages.length) {\n      this.setState({ loading: true });\n    }\n\n    this.onListenForMessages();\n  }\n\n  componentDidUpdate(props) {\n    if (props.limit !== this.props.limit) {\n      this.onListenForMessages();\n    }\n  }\n\n  onListenForMessages = () => {\n    this.props.firebase\n      .messages()\n      .orderByChild('createdAt')\n      .limitToLast(this.props.limit)\n      .on('value', snapshot => {\n        this.props.onSetMessages(snapshot.val());\n\n        this.setState({ loading: false });\n      });\n  };\n\n  componentWillUnmount() {\n    this.props.firebase.messages().off();\n  }\n\n  onChangeText = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  onCreateMessage = (event, authUser) => {\n    this.props.firebase.messages().push({\n      text: this.state.text,\n      userId: authUser.uid,\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n\n    this.setState({ text: '' });\n\n    event.preventDefault();\n  };\n\n  onEditMessage = (message, text) => {\n    const { uid, ...messageSnapshot } = message;\n\n    this.props.firebase.message(message.uid).set({\n      ...messageSnapshot,\n      text,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n  };\n\n  onRemoveMessage = uid => {\n    this.props.firebase.message(uid).remove();\n  };\n\n  onNextPage = () => {\n    this.props.onSetMessagesLimit(this.props.limit + 5);\n  };\n\n  render() {\n    const { messages } = this.props;\n    const { text, loading } = this.state;\n\n    return (\n      <div>\n        {!loading && messages && (\n          <button type=\"button\" onClick={this.onNextPage}>\n            More\n          </button>\n        )}\n\n        {loading && <div>Loading ...</div>}\n\n        {messages && (\n          <MessageList\n            authUser={this.props.authUser}\n            messages={messages}\n            onEditMessage={this.onEditMessage}\n            onRemoveMessage={this.onRemoveMessage}\n          />\n        )}\n\n        {!messages && <div>There are no messages ...</div>}\n\n        <form\n          onSubmit={event =>\n            this.onCreateMessage(event, this.props.authUser)\n          }\n        >\n          <input\n            type=\"text\"\n            value={text}\n            onChange={this.onChangeText}\n          />\n          <button type=\"submit\">Send</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  authUser: state.sessionState.authUser,\n  messages: Object.keys(state.messageState.messages || {}).map(\n    key => ({\n      ...state.messageState.messages[key],\n      uid: key,\n    }),\n  ),\n  limit: state.messageState.limit,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSetMessages: messages =>\n    dispatch({ type: 'MESSAGES_SET', messages }),\n  onSetMessagesLimit: limit =>\n    dispatch({ type: 'MESSAGES_LIMIT_SET', limit }),\n});\n\nexport default compose(\n  withFirebase,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  ),\n)(Messages);\n"]},"metadata":{},"sourceType":"module"}