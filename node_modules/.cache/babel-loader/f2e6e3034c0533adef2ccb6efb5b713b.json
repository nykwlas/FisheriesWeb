{"ast":null,"code":"var _jsxFileName = \"/home/nicolas/fisheries/src/components/Session/withAuthentication.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.props.onSetAuthUser(JSON.parse(localStorage.getItem('authUser')));\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(authUser => {\n        localStorage.setItem('authUser', JSON.stringify(authUser));\n        this.props.onSetAuthUser(authUser);\n      }, () => {\n        localStorage.removeItem('authUser');\n        this.props.onSetAuthUser(null);\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return /*#__PURE__*/React.createElement(Component, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 14\n        }\n      }));\n    }\n\n  }\n\n  const mapDispatchToProps = dispatch => ({\n    onSetAuthUser: authUser => dispatch({\n      type: 'AUTH_USER_SET',\n      authUser\n    })\n  });\n\n  return compose(withFirebase, connect(null, mapDispatchToProps))(WithAuthentication);\n};\n\nexport default withAuthentication;","map":{"version":3,"sources":["/home/nicolas/fisheries/src/components/Session/withAuthentication.js"],"names":["React","connect","compose","withFirebase","withAuthentication","Component","WithAuthentication","constructor","props","onSetAuthUser","JSON","parse","localStorage","getItem","componentDidMount","listener","firebase","onAuthUserListener","authUser","setItem","stringify","removeItem","componentWillUnmount","render","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,SAASC,YAAT,QAA6B,aAA7B;;AAEA,MAAMC,kBAAkB,GAAGC,SAAS,IAAI;AACtC,QAAMC,kBAAN,SAAiCN,KAAK,CAACK,SAAvC,CAAiD;AAC/CE,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,YAAMA,KAAN;AAEA,WAAKA,KAAL,CAAWC,aAAX,CACEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADF;AAGD;;AAEDC,IAAAA,iBAAiB,GAAG;AAClB,WAAKC,QAAL,GAAgB,KAAKP,KAAL,CAAWQ,QAAX,CAAoBC,kBAApB,CACdC,QAAQ,IAAI;AACVN,QAAAA,YAAY,CAACO,OAAb,CAAqB,UAArB,EAAiCT,IAAI,CAACU,SAAL,CAAeF,QAAf,CAAjC;AACA,aAAKV,KAAL,CAAWC,aAAX,CAAyBS,QAAzB;AACD,OAJa,EAKd,MAAM;AACJN,QAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB;AACA,aAAKb,KAAL,CAAWC,aAAX,CAAyB,IAAzB;AACD,OARa,CAAhB;AAUD;;AAEDa,IAAAA,oBAAoB,GAAG;AACrB,WAAKP,QAAL;AACD;;AAEDQ,IAAAA,MAAM,GAAG;AACP,0BAAO,oBAAC,SAAD,oBAAe,KAAKf,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;AA5B8C;;AA+BjD,QAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACtChB,IAAAA,aAAa,EAAES,QAAQ,IACrBO,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,eAAR;AAAyBR,MAAAA;AAAzB,KAAD;AAF4B,GAAL,CAAnC;;AAKA,SAAOhB,OAAO,CACZC,YADY,EAEZF,OAAO,CACL,IADK,EAELuB,kBAFK,CAFK,CAAP,CAMLlB,kBANK,CAAP;AAOD,CA5CD;;AA8CA,eAAeF,kBAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.props.onSetAuthUser(\n        JSON.parse(localStorage.getItem('authUser')),\n      );\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          localStorage.setItem('authUser', JSON.stringify(authUser));\n          this.props.onSetAuthUser(authUser);\n        },\n        () => {\n          localStorage.removeItem('authUser');\n          this.props.onSetAuthUser(null);\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return <Component {...this.props} />;\n    }\n  }\n\n  const mapDispatchToProps = dispatch => ({\n    onSetAuthUser: authUser =>\n      dispatch({ type: 'AUTH_USER_SET', authUser }),\n  });\n\n  return compose(\n    withFirebase,\n    connect(\n      null,\n      mapDispatchToProps,\n    ),\n  )(WithAuthentication);\n};\n\nexport default withAuthentication;\n"]},"metadata":{},"sourceType":"module"}