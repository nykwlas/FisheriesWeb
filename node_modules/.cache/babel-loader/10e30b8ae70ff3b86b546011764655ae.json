{"ast":null,"code":"var _jsxFileName = \"/home/nicolas/fisheries/src/components/Session/withAuthorization.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      }, () => this.props.history.push(ROUTES.SIGN_IN));\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return condition(this.props.authUser) ? /*#__PURE__*/React.createElement(Component, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      })) : null;\n    }\n\n  }\n\n  const mapStateToProps = state => ({\n    authUser: state.sessionState.authUser\n  });\n\n  return compose(withRouter, withFirebase, connect(mapStateToProps))(WithAuthorization);\n};\n\nexport default withAuthorization;","map":{"version":3,"sources":["/home/nicolas/fisheries/src/components/Session/withAuthorization.js"],"names":["React","withRouter","connect","compose","withFirebase","ROUTES","withAuthorization","condition","Component","WithAuthorization","componentDidMount","listener","props","firebase","onAuthUserListener","authUser","history","push","SIGN_IN","componentWillUnmount","render","mapStateToProps","state","sessionState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAO,KAAKC,MAAZ,MAAwB,wBAAxB;;AAEA,MAAMC,iBAAiB,GAAGC,SAAS,IAAIC,SAAS,IAAI;AAClD,QAAMC,iBAAN,SAAgCT,KAAK,CAACQ,SAAtC,CAAgD;AAC9CE,IAAAA,iBAAiB,GAAG;AAClB,WAAKC,QAAL,GAAgB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,kBAApB,CACdC,QAAQ,IAAI;AACV,YAAI,CAACR,SAAS,CAACQ,QAAD,CAAd,EAA0B;AACxB,eAAKH,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwBZ,MAAM,CAACa,OAA/B;AACD;AACF,OALa,EAMd,MAAM,KAAKN,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwBZ,MAAM,CAACa,OAA/B,CANQ,CAAhB;AAQD;;AAEDC,IAAAA,oBAAoB,GAAG;AACrB,WAAKR,QAAL;AACD;;AAEDS,IAAAA,MAAM,GAAG;AACP,aAAOb,SAAS,CAAC,KAAKK,KAAL,CAAWG,QAAZ,CAAT,gBACL,oBAAC,SAAD,oBAAe,KAAKH,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADK,GAEH,IAFJ;AAGD;;AApB6C;;AAuBhD,QAAMS,eAAe,GAAGC,KAAK,KAAK;AAChCP,IAAAA,QAAQ,EAAEO,KAAK,CAACC,YAAN,CAAmBR;AADG,GAAL,CAA7B;;AAIA,SAAOZ,OAAO,CACZF,UADY,EAEZG,YAFY,EAGZF,OAAO,CAACmB,eAAD,CAHK,CAAP,CAILZ,iBAJK,CAAP;AAKD,CAjCD;;AAmCA,eAAeH,iBAAf","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n        () => this.props.history.push(ROUTES.SIGN_IN),\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return condition(this.props.authUser) ? (\n        <Component {...this.props} />\n      ) : null;\n    }\n  }\n\n  const mapStateToProps = state => ({\n    authUser: state.sessionState.authUser,\n  });\n\n  return compose(\n    withRouter,\n    withFirebase,\n    connect(mapStateToProps),\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n"]},"metadata":{},"sourceType":"module"}