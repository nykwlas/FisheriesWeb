{"ast":null,"code":"var _jsxFileName = \"/home/nicolas/FisheriesWeb/src/components/Account/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withAuthorization, withEmailVerification } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\nconst SIGN_IN_METHODS = [{\n  id: 'password',\n  provider: null\n}, {\n  id: 'google.com',\n  provider: 'googleProvider'\n}, {\n  id: 'facebook.com',\n  provider: 'facebookProvider'\n}, {\n  id: 'twitter.com',\n  provider: 'twitterProvider'\n}];\n\nconst AccountPage = ({\n  authUser\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }\n}, \"Account: \", authUser.email), /*#__PURE__*/React.createElement(PasswordChangeForm, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(LoginManagement, {\n  authUser: authUser,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }\n}));\n\nclass LoginManagementBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchSignInMethods = () => {\n      this.props.firebase.auth.fetchSignInMethodsForEmail(this.props.authUser.email).then(activeSignInMethods => this.setState({\n        activeSignInMethods,\n        error: null\n      })).catch(error => this.setState({\n        error\n      }));\n    };\n\n    this.onSocialLoginLink = provider => {\n      this.props.firebase.auth.currentUser.linkWithPopup(this.props.firebase[provider]).then(this.fetchSignInMethods).catch(error => this.setState({\n        error\n      }));\n    };\n\n    this.onDefaultLoginLink = password => {\n      const credential = this.props.firebase.emailAuthProvider.credential(this.props.authUser.email, password);\n      this.props.firebase.auth.currentUser.linkAndRetrieveDataWithCredential(credential).then(this.fetchSignInMethods).catch(error => this.setState({\n        error\n      }));\n    };\n\n    this.onUnlink = providerId => {\n      this.props.firebase.auth.currentUser.unlink(providerId).then(this.fetchSignInMethods).catch(error => this.setState({\n        error\n      }));\n    };\n\n    this.state = {\n      activeSignInMethods: [],\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSignInMethods();\n  }\n\n  render() {\n    const {\n      activeSignInMethods,\n      error\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, \"Sign In Methods:\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, SIGN_IN_METHODS.map(signInMethod => {\n      const onlyOneLeft = activeSignInMethods.length === 1;\n      const isEnabled = activeSignInMethods.includes(signInMethod.id);\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: signInMethod.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }\n      }, signInMethod.id === 'password' ? /*#__PURE__*/React.createElement(DefaultLoginToggle, {\n        onlyOneLeft: onlyOneLeft,\n        isEnabled: isEnabled,\n        signInMethod: signInMethod,\n        onLink: this.onDefaultLoginLink,\n        onUnlink: this.onUnlink,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }\n      }) : /*#__PURE__*/React.createElement(SocialLoginToggle, {\n        onlyOneLeft: onlyOneLeft,\n        isEnabled: isEnabled,\n        signInMethod: signInMethod,\n        onLink: this.onSocialLoginLink,\n        onUnlink: this.onUnlink,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 19\n        }\n      }));\n    })), error && error.message);\n  }\n\n}\n\nconst SocialLoginToggle = ({\n  onlyOneLeft,\n  isEnabled,\n  signInMethod,\n  onLink,\n  onUnlink\n}) => isEnabled ? /*#__PURE__*/React.createElement(\"button\", {\n  type: \"button\",\n  onClick: () => onUnlink(signInMethod.id),\n  disabled: onlyOneLeft,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }\n}, \"Deactivate \", signInMethod.id) : /*#__PURE__*/React.createElement(\"button\", {\n  type: \"button\",\n  onClick: () => onLink(signInMethod.provider),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }\n}, \"Link \", signInMethod.id);\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      this.props.onLink(this.state.passwordOne);\n      this.setState({\n        passwordOne: '',\n        passwordTwo: ''\n      });\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      passwordOne: '',\n      passwordTwo: ''\n    };\n  }\n\n  render() {\n    const {\n      onlyOneLeft,\n      isEnabled,\n      signInMethod,\n      onUnlink\n    } = this.props;\n    const {\n      passwordOne,\n      passwordTwo\n    } = this.state;\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '';\n    return isEnabled ? /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => onUnlink(signInMethod.id),\n      disabled: onlyOneLeft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }\n    }, \"Deactivate \", signInMethod.id) : /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"passwordOne\",\n      value: passwordOne,\n      onChange: this.onChange,\n      type: \"password\",\n      placeholder: \"New Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"passwordTwo\",\n      value: passwordTwo,\n      onChange: this.onChange,\n      type: \"password\",\n      placeholder: \"Confirm New Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: isInvalid,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }\n    }, \"Link \", signInMethod.id));\n  }\n\n}\n\nconst LoginManagement = withFirebase(LoginManagementBase);\n\nconst mapStateToProps = state => ({\n  authUser: state.sessionState.authUser\n});\n\nconst condition = authUser => !!authUser;\n\nexport default compose(connect(mapStateToProps), withEmailVerification, withAuthorization(condition))(AccountPage);","map":{"version":3,"sources":["/home/nicolas/FisheriesWeb/src/components/Account/index.js"],"names":["React","Component","connect","compose","withAuthorization","withEmailVerification","withFirebase","PasswordForgetForm","PasswordChangeForm","SIGN_IN_METHODS","id","provider","AccountPage","authUser","email","LoginManagementBase","constructor","props","fetchSignInMethods","firebase","auth","fetchSignInMethodsForEmail","then","activeSignInMethods","setState","error","catch","onSocialLoginLink","currentUser","linkWithPopup","onDefaultLoginLink","password","credential","emailAuthProvider","linkAndRetrieveDataWithCredential","onUnlink","providerId","unlink","state","componentDidMount","render","map","signInMethod","onlyOneLeft","length","isEnabled","includes","message","SocialLoginToggle","onLink","DefaultLoginToggle","onSubmit","event","preventDefault","passwordOne","passwordTwo","onChange","target","name","value","isInvalid","LoginManagement","mapStateToProps","sessionState","condition"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\n\nimport { withAuthorization, withEmailVerification } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\n\nconst SIGN_IN_METHODS = [\n  {\n    id: 'password',\n    provider: null,\n  },\n  {\n    id: 'google.com',\n    provider: 'googleProvider',\n  },\n  {\n    id: 'facebook.com',\n    provider: 'facebookProvider',\n  },\n  {\n    id: 'twitter.com',\n    provider: 'twitterProvider',\n  },\n];\n\nconst AccountPage = ({ authUser }) => (\n  <div>\n    <h1>Account: {authUser.email}</h1>\n    <PasswordChangeForm />\n    <LoginManagement authUser={authUser} />\n  </div>\n);\n\nclass LoginManagementBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeSignInMethods: [],\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSignInMethods();\n  }\n\n  fetchSignInMethods = () => {\n    this.props.firebase.auth\n      .fetchSignInMethodsForEmail(this.props.authUser.email)\n      .then(activeSignInMethods =>\n        this.setState({ activeSignInMethods, error: null }),\n      )\n      .catch(error => this.setState({ error }));\n  };\n\n  onSocialLoginLink = provider => {\n    this.props.firebase.auth.currentUser\n      .linkWithPopup(this.props.firebase[provider])\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onDefaultLoginLink = password => {\n    const credential = this.props.firebase.emailAuthProvider.credential(\n      this.props.authUser.email,\n      password,\n    );\n\n    this.props.firebase.auth.currentUser\n      .linkAndRetrieveDataWithCredential(credential)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onUnlink = providerId => {\n    this.props.firebase.auth.currentUser\n      .unlink(providerId)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  render() {\n    const { activeSignInMethods, error } = this.state;\n\n    return (\n      <div>\n        Sign In Methods:\n        <ul>\n          {SIGN_IN_METHODS.map(signInMethod => {\n            const onlyOneLeft = activeSignInMethods.length === 1;\n            const isEnabled = activeSignInMethods.includes(\n              signInMethod.id,\n            );\n\n            return (\n              <li key={signInMethod.id}>\n                {signInMethod.id === 'password' ? (\n                  <DefaultLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onDefaultLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                ) : (\n                  <SocialLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onSocialLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                )}\n              </li>\n            );\n          })}\n        </ul>\n        {error && error.message}\n      </div>\n    );\n  }\n}\n\nconst SocialLoginToggle = ({\n  onlyOneLeft,\n  isEnabled,\n  signInMethod,\n  onLink,\n  onUnlink,\n}) =>\n  isEnabled ? (\n    <button\n      type=\"button\"\n      onClick={() => onUnlink(signInMethod.id)}\n      disabled={onlyOneLeft}\n    >\n      Deactivate {signInMethod.id}\n    </button>\n  ) : (\n    <button\n      type=\"button\"\n      onClick={() => onLink(signInMethod.provider)}\n    >\n      Link {signInMethod.id}\n    </button>\n  );\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { passwordOne: '', passwordTwo: '' };\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    this.props.onLink(this.state.passwordOne);\n    this.setState({ passwordOne: '', passwordTwo: '' });\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      onlyOneLeft,\n      isEnabled,\n      signInMethod,\n      onUnlink,\n    } = this.props;\n\n    const { passwordOne, passwordTwo } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return isEnabled ? (\n      <button\n        type=\"button\"\n        onClick={() => onUnlink(signInMethod.id)}\n        disabled={onlyOneLeft}\n      >\n        Deactivate {signInMethod.id}\n      </button>\n    ) : (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n\n        <button disabled={isInvalid} type=\"submit\">\n          Link {signInMethod.id}\n        </button>\n      </form>\n    );\n  }\n}\n\nconst LoginManagement = withFirebase(LoginManagementBase);\n\nconst mapStateToProps = state => ({\n  authUser: state.sessionState.authUser,\n});\n\nconst condition = authUser => !!authUser;\n\nexport default compose(\n  connect(mapStateToProps),\n  withEmailVerification,\n  withAuthorization(condition),\n)(AccountPage);\n"]},"metadata":{},"sourceType":"module"}