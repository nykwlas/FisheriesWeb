{"version":3,"sources":["serviceWorker.js","reducers/session.js","reducers/user.js","reducers/message.js","reducers/index.js","store/index.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","constants/routes.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","constants/roles.js","components/TAC/index.js","components/SignIn/index.js","components/PasswordForget/index.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Session/withEmailVerification.js","components/Messages/MessageItem.js","components/Messages/MessageList.js","components/Messages/Messages.js","components/Messages/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Users/UserList.js","components/Users/UserItem.js","components/Admin/index.js","components/UserGuide/index.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","INITIAL_STATE","authUser","applySetAuthUser","state","action","sessionReducer","type","users","applySetUsers","applySetUser","uid","user","userReducer","messages","limit","applySetMessages","applySetMessagesLimit","messageReducer","rootReducer","combineReducers","sessionState","userState","messageState","store","createStore","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignInWithTwitter","twitterProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doSendEmailVerification","currentUser","sendEmailVerification","url","doPasswordUpdate","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","once","then","snapshot","dbUser","val","roles","emailVerified","providerData","db","ref","message","app","initializeApp","this","serverValue","database","ServerValue","emailAuthProvider","EmailAuthProvider","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","size","onClick","TAC","HOME","NavigationAuth","collapse","isWideEnough","bind","setState","color","dark","expand","href","isOpen","navbar","right","to","ROUTES","SignOut","NavigationNonAuth","connect","Landing","scrollToTop","scrollTo","className","md","icon","id","reveal","cascade","src","tag","Date","getFullYear","username","passwordOne","passwordTwo","isAdmin","acceptTerms","error","SignUpFormBase","onSubmit","event","set","history","push","catch","code","preventDefault","onChange","target","name","value","onChangeCheckbox","checked","isInvalid","label","group","validate","required","htmlFor","gradient","rounded","disabled","SignUpForm","withRouter","SignUpPage","style","paddingBottom","paddingTop","TermsPage","errorFb","errorGoogle","errorTwitter","ERROR_MSG_ACCOUNT_EXISTS","SignInFormBase","onSubmitGoogle","socialAuthUser","displayName","onSubmitFb","additionalUserInfo","profile","onSubmitTwitter","success","containerClass","fab","SignInForm","compose","SignInPage","PasswordForgetFormBase","outline","far","PasswordForgetPage","PasswordForgetForm","withAuthentication","WithAuthentication","onSetAuthUser","JSON","parse","localStorage","getItem","listener","setItem","stringify","removeItem","dispatch","withAuthorization","condition","WithAuthorization","withEmailVerification","WithEmailVerification","onSendEmailVerification","isSent","map","provider","providerId","includes","MessageItem","onToggleEditMode","editMode","editText","text","onChangeEditText","onSaveEditText","onEditMessage","onRemoveMessage","userId","editedAt","MessageList","key","Messages","onListenForMessages","orderByChild","limitToLast","on","onSetMessages","loading","onChangeText","onCreateMessage","createdAt","TIMESTAMP","messageSnapshot","remove","onNextPage","onSetMessagesLimit","length","off","Object","keys","PasswordChangeForm","placeholder","SIGN_IN_METHODS","LoginManagementBase","fetchSignInMethods","fetchSignInMethodsForEmail","activeSignInMethods","onSocialLoginLink","linkWithPopup","onDefaultLoginLink","credential","linkAndRetrieveDataWithCredential","onUnlink","unlink","signInMethod","onlyOneLeft","isEnabled","onLink","SocialLoginToggle","DefaultLoginToggle","LoginManagement","PasswordChange","UserList","onSetUsers","UserItem","onSendPasswordResetEmail","params","onSetUser","exact","path","component","UserGuidePage","LandingPage","HomePage","AccountPage","AdminPage","ReactDOM","render","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+OAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,sCClBAC,EAAgB,CACpBC,SAAU,MAGNC,EAAmB,SAACC,EAAOC,GAAR,sBACpBD,EADoB,CAEvBF,SAAUG,EAAOH,YAaJI,MAVf,WAAwD,IAAhCF,EAA+B,uDAAvBH,EAAeI,EAAQ,uCACrD,OAAQA,EAAOE,MACb,IAAK,gBACH,OAAOJ,EAAiBC,EAAOC,GAEjC,QACE,OAAOD,I,QCfPH,EAAgB,CACpBO,MAAO,MAGHC,EAAgB,SAACL,EAAOC,GAAR,sBACjBD,EADiB,CAEpBI,MAAOH,EAAOG,SAGVE,EAAe,SAACN,EAAOC,GAAR,sBAChBD,EADgB,CAEnBI,MAAM,eACDJ,EAAMI,MADN,eAEFH,EAAOM,IAAMN,EAAOO,UAiBVC,MAbf,WAAqD,IAAhCT,EAA+B,uDAAvBH,EAAeI,EAAQ,uCAClD,OAAQA,EAAOE,MACb,IAAK,YACH,OAAOE,EAAcL,EAAOC,GAE9B,IAAK,WACH,OAAOK,EAAaN,EAAOC,GAE7B,QACE,OAAOD,IC1BPH,EAAgB,CACpBa,SAAU,KACVC,MAAO,GAGHC,EAAmB,SAACZ,EAAOC,GAAR,sBACpBD,EADoB,CAEvBU,SAAUT,EAAOS,YAGbG,EAAwB,SAACb,EAAOC,GAAR,sBACzBD,EADyB,CAE5BW,MAAOV,EAAOU,SAgBDG,MAbf,WAAwD,IAAhCd,EAA+B,uDAAvBH,EAAeI,EAAQ,uCACrD,OAAQA,EAAOE,MACb,IAAK,eACH,OAAOS,EAAiBZ,EAAOC,GAEjC,IAAK,qBACH,OAAOY,EAAsBb,EAAOC,GAEtC,QACE,OAAOD,ICbEe,EANKC,YAAgB,CAClCC,aAAcf,EACdgB,UAAWT,EACXU,aAAcL,ICHDM,EAFDC,YAAYN,G,2DCDpBO,EAAkBC,IAAMC,cAAc,MAE/BC,EAAe,SAAAC,GAAS,OAAI,SAAAC,GAAK,OAC5C,kBAACL,EAAgBM,SAAjB,MACG,SAAAC,GAAQ,OAAI,kBAACH,EAAD,iBAAeC,EAAf,CAAsBE,SAAUA,UAIlCP,I,iBCNTQ,G,YAAS,CACbC,OAAQ,2CACRC,WAAY,kCACZC,YAAa,0CACbC,UAAW,kBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,8CCRMC,EDYb,aAAe,IAAD,gCAsBdC,iCAAmC,SAACC,EAAOC,GAAR,OACjC,EAAKC,KAAKC,+BAA+BH,EAAOC,IAvBpC,KAyBdG,6BAA+B,SAACJ,EAAOC,GAAR,OAC7B,EAAKC,KAAKG,2BAA2BL,EAAOC,IA1BhC,KA4BdK,mBAAqB,kBACnB,EAAKJ,KAAKK,gBAAgB,EAAKC,iBA7BnB,KA+BdC,qBAAuB,kBACrB,EAAKP,KAAKK,gBAAgB,EAAKG,mBAhCnB,KAkCdC,oBAAsB,kBACpB,EAAKT,KAAKK,gBAAgB,EAAKK,kBAnCnB,KAqCdC,UAAY,kBAAM,EAAKX,KAAKY,WArCd,KAuCdC,gBAAkB,SAAAf,GAAK,OAAI,EAAKE,KAAKc,uBAAuBhB,IAvC9C,KAyCdiB,wBAA0B,kBACxB,EAAKf,KAAKgB,YAAYC,sBAAsB,CAC1CC,IAAK,2BA3CK,KA8CdC,iBAAmB,SAAApB,GAAQ,OACzB,EAAKC,KAAKgB,YAAYI,eAAerB,IA/CzB,KAmDdsB,mBAAqB,SAACC,EAAMC,GAAP,OACnB,EAAKvB,KAAKwB,oBAAmB,SAAApE,GACvBA,EACF,EAAKU,KAAKV,EAASS,KAChB4D,KAAK,SACLC,MAAK,SAAAC,GACJ,IAAMC,EAASD,EAASE,MAGnBD,EAAOE,QACVF,EAAOE,MAAQ,IAIjB1E,EAAQ,aACNS,IAAKT,EAASS,IACdiC,MAAO1C,EAAS0C,MAChBiC,cAAe3E,EAAS2E,cACxBC,aAAc5E,EAAS4E,cACpBJ,GAGLN,EAAKlE,MAGTmE,QA5EQ,KAkFdzD,KAAO,SAAAD,GAAG,OAAI,EAAKoE,GAAGC,IAAR,gBAAqBrE,KAlFrB,KAoFdH,MAAQ,kBAAM,EAAKuE,GAAGC,IAAI,UApFZ,KAwFdC,QAAU,SAAAtE,GAAG,OAAI,EAAKoE,GAAGC,IAAR,mBAAwBrE,KAxF3B,KA0FdG,SAAW,kBAAM,EAAKiE,GAAGC,IAAI,aAzF3BE,IAAIC,cAAcjD,GAIlBkD,KAAKC,YAAcH,IAAII,SAASC,YAChCH,KAAKI,kBAAoBN,IAAIpC,KAAK2C,kBAIlCL,KAAKtC,KAAOoC,IAAIpC,OAChBsC,KAAKL,GAAKG,IAAII,WAIdF,KAAKhC,eAAiB,IAAI8B,IAAIpC,KAAK4C,mBACnCN,KAAK9B,iBAAmB,IAAI4B,IAAIpC,KAAK6C,qBACrCP,KAAK5B,gBAAkB,IAAI0B,IAAIpC,KAAK8C,qBEtBzB/D,KANO,SAAC,GAAD,IAAGI,EAAH,EAAGA,SAAH,OACpB,kBAAC,IAAD,CAAQ4D,KAAK,KAAKC,QAAS7D,EAASwB,WAApC,eCHWsC,EAAM,cAGNC,EAAO,QCedC,E,kDACJ,WAAYlE,GAAQ,IAAD,8BACjB,cAAMA,IACD3B,MAAQ,CACX8F,UAAU,EACVC,cAAc,GAEhB,EAAKL,QAAU,EAAKA,QAAQM,KAAb,gBANE,E,sDAUjBhB,KAAKiB,SAAS,CACZH,UAAWd,KAAKhF,MAAM8F,a,+BAKxB,OACE,kBAAC,IAAD,CAAWI,MAAM,OAAOC,MAAI,EAACC,OAAO,MAClC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAgBC,KAAK,KACnB,8CAEF,kBAAC,IAAD,CAAkBX,QAASV,KAAKU,UAChC,kBAAC,IAAD,CAAaY,OAAQtB,KAAKhF,MAAM8F,SAAUS,QAAM,GAC9C,kBAAC,IAAD,CAAcC,OAAK,GACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAuCC,GAAIC,GAA3C,SAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAuCD,GD5ChC,YC4CP,cAECzB,KAAKrD,MAAM7B,SAAS0E,MAApB,OACD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAuCiC,GD9CpC,UC8CH,UAGJ,kBAAC,IAAD,KACE,kBAACE,EAAD,e,GAtCapF,IAAMG,WAgD7BkF,E,kDACJ,WAAYjF,GAAQ,IAAD,8BACjB,cAAMA,IACD3B,MAAQ,CACX8F,UAAU,EACVC,cAAc,GAEhB,EAAKL,QAAU,EAAKA,QAAQM,KAAb,gBANE,E,sDAUjBhB,KAAKiB,SAAS,CACZH,UAAWd,KAAKhF,MAAM8F,a,+BAKxB,OACE,kBAAC,IAAD,CAAWI,MAAM,OAAOC,MAAI,EAACC,OAAO,MAClC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAgBC,KAAK,KACnB,8CAEF,kBAAC,IAAD,CAAkBX,QAASV,KAAKU,UAChC,kBAAC,IAAD,CAAaY,OAAQtB,KAAKhF,MAAM8F,SAAUS,QAAM,GAC9C,kBAAC,IAAD,CAAcC,OAAK,GACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAuCC,GD/FhC,KC+FP,SAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAuCA,GD9FhC,WC8FP,YAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAuCA,GDpGhC,WCoGP,oB,GAjCgBlF,IAAMG,WA+CvBmF,eAJS,SAAC7G,GAAD,MAAY,CAClCF,SAAUE,EAAMiB,aAAanB,YAGhB+G,EAlGI,SAAC,GAAD,IAAG/G,EAAH,EAAGA,SAAH,OACjBA,EAAW,kBAAC,EAAD,CAAgBA,SAAUA,IAAe,kBAAC,EAAD,SC6KvCgH,G,MAxKC,WACd,IAAMC,EAAc,kBAAMtH,OAAOuH,SAAS,EAAG,IAE7C,OACE,oCACE,kBAAC,IAAD,CAAed,MAAM,OAAOe,UAAU,gBACtC,yBAAKA,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,GAAG,KACHD,UAAU,gDAEV,kBAAC,IAAD,CAAaA,UAAU,eACrB,wBAAIA,UAAU,sBACZ,4BAAQA,UAAU,oBAAlB,kBASF,kBAAC,IAAD,MACA,gDACA,uBAAGA,UAAU,QAAb,kEAGA,kBAAC,IAAD,CAAQA,UAAU,8CAChB,kBAAC,IAAD,CACEA,UAAU,uEACVR,GFpDM,eEsDN,kBAAC,IAAD,CAASU,KAAK,iBAAiBF,UAAU,SAJ3C,cAQA,kBAAC,IAAD,CACEA,UAAU,kEACVR,GF9DG,WEgEH,kBAAC,IAAD,CAASU,KAAK,OAAOF,UAAU,SAJjC,qBAYV,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,GAAG,KAAKD,UAAU,QACxB,wBAAIA,UAAU,qCAAd,kBAGA,uBAAGA,UAAU,+BAAb,sCAGA,uBAAGA,UAAU,+BAAb,UACA,uBAAGA,UAAU,0BAAb,UACA,wBAAIA,UAAU,SACd,kBAAC,IAAD,CAAQG,GAAG,cACT,kBAAC,IAAD,CAAQF,GAAG,KACT,kBAAC,IAAD,CAAcG,QAAM,EAAClH,KAAK,cACxB,kBAAC,IAAD,CAASmH,SAAO,EAACL,UAAU,uBACzB,kBAAC,IAAD,CACEK,SAAO,EACPL,UAAU,SACVM,IAAI,iGAEN,kBAAC,IAAD,CAAaD,SAAO,EAACL,UAAU,eAC7B,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEE,KAAK,iBACLF,UAAU,mBAEZ,4CAEF,kBAAC,IAAD,yBACA,kBAAC,IAAD,CACEO,IAAI,SACJf,GAAG,WACHP,MAAM,YACNe,UAAU,wDACVvB,QAASqB,GALX,YAaR,kBAAC,IAAD,CAAQG,GAAG,KACT,kBAAC,IAAD,CAAcG,QAAM,EAAClH,KAAK,cACxB,kBAAC,IAAD,CAASmH,SAAO,EAACL,UAAU,uBACzB,kBAAC,IAAD,CACEK,SAAO,EACPC,IAAI,+EACJN,UAAU,WAEZ,kBAAC,IAAD,CAAaK,SAAO,EAACL,UAAU,eAC7B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASE,KAAK,OAAOF,UAAU,mBAC/B,4CAEF,kBAAC,IAAD,iCACA,kBAAC,IAAD,CACEO,IAAI,SACJf,GAAG,WACHP,MAAM,YACNe,UAAU,wDACVvB,QAASqB,GALX,YAaR,kBAAC,IAAD,CAAQG,GAAG,KACT,kBAAC,IAAD,CAAcG,QAAM,EAAClH,KAAK,eACxB,kBAAC,IAAD,CAASmH,SAAO,EAACL,UAAU,uBACzB,kBAAC,IAAD,CACEK,SAAO,EACPL,UAAU,SACVM,IAAI,+EAEN,kBAAC,IAAD,CAAaD,SAAO,EAACL,UAAU,eAC7B,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEE,KAAK,YACLF,UAAU,oBAEZ,4CAEF,kBAAC,IAAD,yBAEA,kBAAC,IAAD,CACEO,IAAI,SACJf,GAAG,WACHP,MAAM,YACNe,UAAU,wDACVvB,QAASqB,GALX,iBAkBlB,kBAAC,IAAD,CAAWb,MAAM,QACf,uBAAGe,UAAU,0CAAb,SACU,IAAIQ,MAAOC,cADrB,kBAEE,kBAAC,IAAD,CAAQjC,KAAK,KAAKC,QAASqB,GAA3B,gCC/JJlH,EAAgB,CACpB8H,SAAU,GACVnF,MAAO,GACPoF,YAAa,GACbC,YAAa,GACbC,SAAS,EACTC,aAAa,EACbC,MAAO,MAaHC,E,kDACJ,WAAYtG,GAAQ,IAAD,8BACjB,cAAMA,IAKRuG,SAAW,SAACC,GAAW,IAAD,EAC8B,EAAKnI,MAA/C2H,EADY,EACZA,SAAUnF,EADE,EACFA,MAAOoF,EADL,EACKA,YAAaE,EADlB,EACkBA,QAChCtD,EAAQ,GAEVsD,IACFtD,EAAK,MCvDU,SD0DjB,EAAK7C,MAAME,SACRU,iCAAiCC,EAAOoF,GACxCxD,MAAK,SAACtE,GAEL,OAAO,EAAK6B,MAAME,SAASrB,KAAKV,EAASU,KAAKD,KAAK6H,IAAI,CACrDT,WACAnF,QACAgC,aAGHJ,MAAK,WACJ,OAAO,EAAKzC,MAAME,SAAS4B,6BAE5BW,MAAK,WACJ,EAAK6B,SAAL,eAAmBpG,IACnB,EAAK8B,MAAM0G,QAAQC,KAAK5B,MAEzB6B,OAAM,SAACP,GA1CoB,8BA2CtBA,EAAMQ,OACRR,EAAMnD,QA1Cc,4RA6CtB,EAAKoB,SAAS,CAAE+B,aAGpBG,EAAMM,kBAvCW,EA0CnBC,SAAW,SAACP,GACV,EAAKlC,SAAL,eAAiBkC,EAAMQ,OAAOC,KAAOT,EAAMQ,OAAOE,SA3CjC,EA8CnBC,iBAAmB,SAACX,GAClB,EAAKlC,SAAL,eAAiBkC,EAAMQ,OAAOC,KAAOT,EAAMQ,OAAOI,WA5ClD,EAAK/I,MAAL,eAAkBH,GAHD,E,qDAkDT,IAAD,EASHmF,KAAKhF,MAPP2H,EAFK,EAELA,SACAnF,EAHK,EAGLA,MACAoF,EAJK,EAILA,YACAC,EALK,EAKLA,YACAC,EANK,EAMLA,QACAC,EAPK,EAOLA,YACAC,EARK,EAQLA,MAGIgB,EACJpB,IAAgBC,GACA,KAAhBD,GACU,KAAVpF,GACa,KAAbmF,IACgB,IAAhBI,EAEF,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQb,GAAG,MACX,kBAAC,IAAD,CAAQA,GAAG,KACT,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAaD,UAAU,QACrB,yBAAKA,UAAU,eACb,wBAAIA,UAAU,uBACZ,6CAGJ,kBAAC,IAAD,CACE2B,KAAK,WACLK,MAAM,sBACNJ,MAAOlB,EACPe,SAAU1D,KAAK0D,SACfQ,OAAK,EACL/I,KAAK,OACLgJ,UAAQ,IAEV,kBAAC,IAAD,CACEP,KAAK,QACLK,MAAM,mBACNJ,MAAOrG,EACPkG,SAAU1D,KAAK0D,SACfQ,OAAK,EACL/I,KAAK,QACLgJ,UAAQ,IAEV,kBAAC,IAAD,CACEP,KAAK,cACLC,MAAOjB,EACPc,SAAU1D,KAAK0D,SACfO,MAAM,sBACNC,OAAK,EACL/I,KAAK,WACLgJ,UAAQ,IAEV,kBAAC,IAAD,CACEP,KAAK,cACLC,MAAOhB,EACPa,SAAU1D,KAAK0D,SACfO,MAAM,wBACNC,OAAK,EACL/I,KAAK,WACLgJ,UAAQ,IAEV,yBAAKlC,UAAU,2CACb,2BACEA,UAAU,uBACV9G,KAAK,WACLyI,KAAK,UACLF,SAAU1D,KAAK8D,iBACfD,MAAOf,EACPV,GAAG,gBACHgC,UAAQ,IAEV,2BACEnC,UAAU,uBACVoC,QAAQ,iBAFV,+BAOF,yBAAKpC,UAAU,2CACb,2BACEA,UAAU,uBACV9G,KAAK,WACLyI,KAAK,cACLF,SAAU1D,KAAK8D,iBACfD,MAAOd,EACPX,GAAG,gBACHgC,UAAQ,IAEV,2BACEnC,UAAU,uBACVoC,QAAQ,iBAER,iDAEI,kBAAC,IAAD,CAAM5C,GAAIC,GAAV,+BAIR,kBAAC,IAAD,CAAQO,UAAU,kCAChB,kBAAC,IAAD,CAAQC,GAAG,KAAKD,UAAU,eACxB,kBAAC,IAAD,CACE9G,KAAK,SACLmJ,SAAS,OACTC,SAAO,EACPC,SAAUR,EACVtD,QAASV,KAAKkD,SACdjB,UAAU,wBANZ,WAUCe,GAAS,2BAAIA,EAAMnD,YAI1B,kBAAC,IAAD,CAAgBoC,UAAU,kBACxB,uBAAGA,UAAU,mDAAb,mBAEE,kBAAC,IAAD,CAAMR,GHpND,WGoNL,eAKR,kBAAC,IAAD,CAAQS,GAAG,Y,GAlLQxF,aA+LvB+H,EAAaC,YAAWjI,EAAawG,IAE5B0B,EA3NI,kBACjB,yBAAKC,MAAO,CAAEC,cAAe,GAAIC,WAAY,KAC3C,kBAACL,EAAD,QEXWM,EANG,kBAChB,6BACE,sD,QCoBElK,EAAgB,CACpB2C,MAAO,GACPC,SAAU,GACVuF,MAAO,KACPgC,QAAS,KACTC,YAAa,KACbC,aAAc,MAMVC,EAAwB,mMAOxBC,G,kDACJ,WAAYzI,GAAQ,IAAD,8BACjB,cAAMA,IAKRuG,SAAW,SAACC,GAAW,IAAD,EACQ,EAAKnI,MAAzBwC,EADY,EACZA,MAAOC,EADK,EACLA,SAEf,EAAKd,MAAME,SACRe,6BAA6BJ,EAAOC,GACpC2B,MAAK,WACJ,EAAK6B,SAAL,eAAmBpG,IACnB,EAAK8B,MAAM0G,QAAQC,KAAK5B,MAEzB6B,OAAM,SAACP,GACN,EAAK/B,SAAS,CAAE+B,aAGpBG,EAAMM,kBAnBW,EAsBnB4B,eAAiB,SAAClC,GAChB,EAAKxG,MAAME,SACRiB,qBACAsB,MAAK,SAACkG,GAEL,OAAO,EAAK3I,MAAME,SAASrB,KAAK8J,EAAe9J,KAAKD,KAAK6H,IAAI,CAC3DT,SAAU2C,EAAe9J,KAAK+J,YAC9B/H,MAAO8H,EAAe9J,KAAKgC,MAC3BgC,MAAO,QAGVJ,MAAK,WACJ,EAAK6B,SAAS,CAAEgE,YAAa,OAC7B,EAAKtI,MAAM0G,QAAQC,KAAK5B,MAEzB6B,OAAM,SAACP,GA/CZ,kDAgDUA,EAAMQ,OACRR,EAAMnD,QAAUsF,GAGlB,EAAKlE,SAAS,CAAE+B,aAGpBG,EAAMM,kBA7CW,EAgDnB+B,WAAa,SAACrC,GACZ,EAAKxG,MAAME,SACRoB,uBACAmB,MAAK,SAACkG,GAEL,OAAO,EAAK3I,MAAME,SAASrB,KAAK8J,EAAe9J,KAAKD,KAAK6H,IAAI,CAC3DT,SAAU2C,EAAeG,mBAAmBC,QAAQ9B,KACpDpG,MAAO8H,EAAeG,mBAAmBC,QAAQlI,MACjDgC,MAAO,QAGVJ,MAAK,WACJ,EAAK6B,SAAS,CAAE+B,MAAO,OACvB,EAAKrG,MAAM0G,QAAQC,KAAK5B,MAEzB6B,OAAM,SAACP,GAzEZ,kDA0EUA,EAAMQ,OACRR,EAAMnD,QAAUsF,GAGlB,EAAKlE,SAAS,CAAE+B,aAGpBG,EAAMM,kBAvEW,EA0EnBkC,gBAAkB,SAACxC,GACjB,EAAKxG,MAAME,SACRsB,sBACAiB,MAAK,SAACkG,GAEL,OAAO,EAAK3I,MAAME,SAASrB,KAAK8J,EAAe9J,KAAKD,KAAK6H,IAAI,CAC3DT,SAAU2C,EAAeG,mBAAmBC,QAAQ9B,KACpDpG,MAAO8H,EAAeG,mBAAmBC,QAAQlI,MACjDgC,MAAO,QAGVJ,MAAK,WACJ,EAAK6B,SAAS,CAAE+B,MAAO,OACvB,EAAKrG,MAAM0G,QAAQC,KAAK5B,MAEzB6B,OAAM,SAACP,GAnGZ,kDAoGUA,EAAMQ,OACRR,EAAMnD,QAAUsF,GAGlB,EAAKlE,SAAS,CAAE+B,aAGpBG,EAAMM,kBAjGW,EAoGnBC,SAAW,SAACP,GACV,EAAKlC,SAAL,eAAiBkC,EAAMQ,OAAOC,KAAOT,EAAMQ,OAAOE,SAlGlD,EAAK7I,MAAL,eAAkBH,GAHD,E,qDAwGT,IAAD,EAQHmF,KAAKhF,MANPwC,EAFK,EAELA,MACAC,EAHK,EAGLA,SACAuF,EAJK,EAILA,MACAiC,EALK,EAKLA,YACAD,EANK,EAMLA,QACAE,EAPK,EAOLA,aAGIlB,EAAyB,KAAbvG,GAA6B,KAAVD,EACrC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ0E,GAAG,MAEX,kBAAC,IAAD,CAAQA,GAAG,KACT,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAaD,UAAU,QACrB,yBAAKA,UAAU,eACb,wBAAIA,UAAU,uBACZ,6CAGJ,kBAAC,IAAD,CACEgC,MAAM,aACNL,KAAK,QACLM,OAAK,EACL/I,KAAK,QACLgJ,UAAQ,EACRN,MAAOrG,EACPkG,SAAU1D,KAAK0D,SACfV,MAAM,QACN4C,QAAQ,UAEV,kBAAC,IAAD,CACE3B,MAAM,gBACNL,KAAK,WACLM,OAAK,EACL/I,KAAK,WACL0I,MAAOpG,EACPiG,SAAU1D,KAAK0D,SACfS,UAAQ,EACR0B,eAAe,SAEjB,uBAAG5D,UAAU,wDACX,kBAAC,IAAD,CAAMR,GN3LO,cM2Lb,qBAEF,yBAAKQ,UAAU,oBACb,kBAAC,IAAD,CACE9G,KAAK,SACLmJ,SAAS,OACTC,SAAO,EACPC,SAAUR,EACVtD,QAASV,KAAKkD,SACdjB,UAAU,wBANZ,WAUCe,GAAS,2BAAIA,EAAMnD,UAEtB,uBAAGoC,UAAU,gFAAb,oBAGA,yBAAKA,UAAU,0CACb,kBAAC,IAAD,CACE9G,KAAK,SACL+F,MAAM,QACNqD,SAAO,EACP7D,QAASV,KAAKwF,WACdvD,UAAU,sBAEV,kBAAC,IAAD,CACE6D,KAAG,EACH3D,KAAK,aACLF,UAAU,2BAGb+C,GAAW,2BAAIA,EAAQnF,SACxB,kBAAC,IAAD,CACE1E,KAAK,SACL+F,MAAM,QACNqD,SAAO,EACP7D,QAASV,KAAK2F,gBACd1D,UAAU,sBAEV,kBAAC,IAAD,CAAS6D,KAAG,EAAC3D,KAAK,UAAUF,UAAU,eAEvCiD,GAAgB,2BAAIA,EAAarF,SAClC,kBAAC,IAAD,CACE1E,KAAK,SACL+F,MAAM,QACNqD,SAAO,EACP7D,QAASV,KAAKqF,eACdpD,UAAU,cAEV,kBAAC,IAAD,CAAS6D,KAAG,EAAC3D,KAAK,gBAAgBF,UAAU,eAE7CgD,GAAe,2BAAIA,EAAYpF,WAGpC,kBAAC,IAAD,CAAgBoC,UAAU,kBACxB,uBAAGA,UAAU,mDAAb,gBAEE,kBAAC,IAAD,CAAMR,GN3PD,WM2PL,eAKR,kBAAC,IAAD,CAAQS,GAAG,Y,GAtNQxF,aA8NvBqJ,GAAaC,YAAQtB,IAAYjI,EAApBuJ,CAAkCZ,IAEtCa,GAzPI,kBACjB,yBAAKrB,MAAO,CAACC,cAAe,GAAIC,WAAY,KAC1C,kBAACiB,GAAD,QCGElL,GAAgB,CACpB2C,MAAO,GACPwF,MAAO,MAGHkD,G,kDACJ,WAAYvJ,GAAQ,IAAD,8BACjB,cAAMA,IAKRuG,SAAW,SAACC,GAAW,IACb3F,EAAU,EAAKxC,MAAfwC,MAER,EAAKb,MAAME,SACR0B,gBAAgBf,GAChB4B,MAAK,WACJ,EAAK6B,SAAL,eAAmBpG,QAEpB0I,OAAM,SAACP,GACN,EAAK/B,SAAS,CAAE+B,aAGpBG,EAAMM,kBAlBW,EAqBnBC,SAAW,SAACP,GACV,EAAKlC,SAAL,eAAiBkC,EAAMQ,OAAOC,KAAOT,EAAMQ,OAAOE,SAnBlD,EAAK7I,MAAL,eAAkBH,IAHD,E,qDAyBT,IAAD,EACkBmF,KAAKhF,MAAtBwC,EADD,EACCA,MAAOwF,EADR,EACQA,MAETgB,EAAsB,KAAVxG,EAElB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ0E,GAAG,MACX,kBAAC,IAAD,CAAQA,GAAG,KACT,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAaD,UAAU,QACrB,yBAAKA,UAAU,eACb,wBAAIA,UAAU,uBACZ,oDAGJ,kBAAC,IAAD,CACE2B,KAAK,QACLK,MAAM,mBACNJ,MAAOrG,EACPkG,SAAU1D,KAAK0D,SACfQ,OAAK,EACL/I,KAAK,QACLgJ,UAAQ,IAEV,yBAAKlC,UAAU,yBACb,kBAAC,IAAD,CACEsC,SAAO,EACP7D,QAASV,KAAKkD,SACdsB,SAAUR,EACVmC,SAAO,EACPjF,MAAM,QALR,oBAQE,kBAAC,IAAD,CAASkF,KAAG,EAACjE,KAAK,cAAcF,UAAU,WAG9C,yBAAKA,UAAU,eACZe,GAAS,2BAAIA,EAAMnD,WAGxB,kBAAC,IAAD,CAAgBoC,UAAU,kBACxB,uBAAGA,UAAU,mDAAb,eAEE,kBAAC,IAAD,CAAMR,GP/FD,WO+FL,eAKR,kBAAC,IAAD,CAAQS,GAAG,Y,GA5EgBxF,aAyFtB2J,GApGY,kBACzB,yBAAKzB,MAAO,CAAEC,cAAe,GAAIC,WAAY,KAC3C,kBAACwB,GAAD,QAoGEA,GAAqB7J,EAAayJ,ICnEzBK,GA9CY,SAAA7J,GAAc,IACjC8J,EADgC,kDAEpC,WAAY7J,GAAQ,IAAD,8BACjB,cAAMA,IAEDA,MAAM8J,cACTC,KAAKC,MAAMC,aAAaC,QAAQ,cAJjB,EAFiB,gEAUf,IAAD,OAClB7G,KAAK8G,SAAW9G,KAAKrD,MAAME,SAASkC,oBAClC,SAAAjE,GACE8L,aAAaG,QAAQ,WAAYL,KAAKM,UAAUlM,IAChD,EAAK6B,MAAM8J,cAAc3L,MAE3B,WACE8L,aAAaK,WAAW,YACxB,EAAKtK,MAAM8J,cAAc,WAlBK,6CAwBlCzG,KAAK8G,aAxB6B,+BA4BlC,OAAO,kBAACpK,EAAcsD,KAAKrD,WA5BO,GACLJ,IAAMG,WAoCvC,OAAOsJ,YACLvJ,EACAoF,YACE,MARuB,SAAAqF,GAAQ,MAAK,CACtCT,cAAe,SAAA3L,GAAQ,OACrBoM,EAAS,CAAE/L,KAAM,gBAAiBL,kBAG/BkL,CAMLQ,ICNWW,GAnCW,SAAAC,GAAS,OAAI,SAAA1K,GAAc,IAC7C2K,EAD4C,kLAE3B,IAAD,OAClBrH,KAAK8G,SAAW9G,KAAKrD,MAAME,SAASkC,oBAClC,SAAAjE,GACOsM,EAAUtM,IACb,EAAK6B,MAAM0G,QAAQC,KTVR,cSaf,kBAAM,EAAK3G,MAAM0G,QAAQC,KTbV,gBSI6B,6CAc9CtD,KAAK8G,aAdyC,+BAkB9C,OAAOM,EAAUpH,KAAKrD,MAAM7B,UAC1B,kBAAC4B,EAAcsD,KAAKrD,OAClB,SApB0C,GAClBJ,IAAMG,WA2BtC,OAAOsJ,YACLtB,IACAjI,EACAoF,aAPsB,SAAA7G,GAAK,MAAK,CAChCF,SAAUE,EAAMiB,aAAanB,aAGxBkL,CAILqB,KC4BWC,GAvDe,SAAA5K,GAAc,IACpC6K,EADmC,kDAEvC,WAAY5K,GAAQ,IAAD,8BACjB,cAAMA,IAKR6K,wBAA0B,WACxB,EAAK7K,MAAME,SACR4B,0BACAW,MAAK,kBAAM,EAAK6B,SAAS,CAAEwG,QAAQ,QANtC,EAAKzM,MAAQ,CAAEyM,QAAQ,GAHN,EAFoB,qDAerC,OAtByB3M,EAsBKkF,KAAKrD,MAAM7B,YApB5CA,EAAS2E,eACV3E,EAAS4E,aACNgI,KAAI,SAAAC,GAAQ,OAAIA,EAASC,cACzBC,SAAS,YAkBN,6BACG7H,KAAKhF,MAAMyM,OACV,8KAMA,0JAOF,4BACEtM,KAAK,SACLuF,QAASV,KAAKwH,wBACdhD,SAAUxE,KAAKhF,MAAMyM,QAHvB,6BASF,kBAAC/K,EAAcsD,KAAKrD,OA/CG,IAAA7B,MAOY,GACLyB,IAAMG,WAgD1C,OAAOsJ,YACLvJ,EACAoF,aANsB,SAAA7G,GAAK,MAAK,CAChCF,SAAUE,EAAMiB,aAAanB,aAGxBkL,CAGLuB,I,SCSWO,G,kDAvEb,WAAYnL,GAAQ,IAAD,8BACjB,cAAMA,IAQRoL,iBAAmB,WACjB,EAAK9G,UAAS,SAAAjG,GAAK,MAAK,CACtBgN,UAAWhN,EAAMgN,SACjBC,SAAU,EAAKtL,MAAMkD,QAAQqI,UAZd,EAgBnBC,iBAAmB,SAAAhF,GACjB,EAAKlC,SAAS,CAAEgH,SAAU9E,EAAMQ,OAAOE,SAjBtB,EAoBnBuE,eAAiB,WACf,EAAKzL,MAAM0L,cAAc,EAAK1L,MAAMkD,QAAS,EAAK7E,MAAMiN,UAExD,EAAKhH,SAAS,CAAE+G,UAAU,KApB1B,EAAKhN,MAAQ,CACXgN,UAAU,EACVC,SAAU,EAAKtL,MAAMkD,QAAQqI,MALd,E,qDA0BT,IAAD,EACwClI,KAAKrD,MAA5C7B,EADD,EACCA,SAAU+E,EADX,EACWA,QAASyI,EADpB,EACoBA,gBADpB,EAEwBtI,KAAKhF,MAA5BgN,EAFD,EAECA,SAAUC,EAFX,EAEWA,SAElB,OACE,4BACGD,EACC,2BACE7M,KAAK,OACL0I,MAAOoE,EACPvE,SAAU1D,KAAKmI,mBAGjB,8BACE,gCAAStI,EAAQ0I,QADnB,IACqC1I,EAAQqI,KAC1CrI,EAAQ2I,UAAY,2CAIxB1N,EAASS,MAAQsE,EAAQ0I,QACxB,8BACGP,EACC,8BACE,4BAAQtH,QAASV,KAAKoI,gBAAtB,QACA,4BAAQ1H,QAASV,KAAK+H,kBAAtB,UAGF,4BAAQrH,QAASV,KAAK+H,kBAAtB,SAGAC,GACA,4BACE7M,KAAK,SACLuF,QAAS,kBAAM4H,EAAgBzI,EAAQtE,OAFzC,gB,GA1DYmB,aCqBX+L,GAnBK,SAAC,GAAD,IAClB3N,EADkB,EAClBA,SACAY,EAFkB,EAElBA,SACA2M,EAHkB,EAGlBA,cACAC,EAJkB,EAIlBA,gBAJkB,OAMlB,4BACG5M,EAASgM,KAAI,SAAA7H,GAAO,OACnB,kBAAC,GAAD,CACE/E,SAAUA,EACV4N,IAAK7I,EAAQtE,IACbsE,QAASA,EACTwI,cAAeA,EACfC,gBAAiBA,SCVnBK,G,kDACJ,WAAYhM,GAAQ,IAAD,8BACjB,cAAMA,IAsBRiM,oBAAsB,WACpB,EAAKjM,MAAME,SACRnB,WACAmN,aAAa,aACbC,YAAY,EAAKnM,MAAMhB,OACvBoN,GAAG,SAAS,SAAA1J,GACX,EAAK1C,MAAMqM,cAAc3J,EAASE,OAElC,EAAK0B,SAAS,CAAEgI,SAAS,QA/BZ,EAuCnBC,aAAe,SAAA/F,GACb,EAAKlC,SAAS,CAAEiH,KAAM/E,EAAMQ,OAAOE,SAxClB,EA2CnBsF,gBAAkB,SAAChG,EAAOrI,GACxB,EAAK6B,MAAME,SAASnB,WAAW4H,KAAK,CAClC4E,KAAM,EAAKlN,MAAMkN,KACjBK,OAAQzN,EAASS,IACjB6N,UAAW,EAAKzM,MAAME,SAASoD,YAAYoJ,YAG7C,EAAKpI,SAAS,CAAEiH,KAAM,KAEtB/E,EAAMM,kBApDW,EAuDnB4E,cAAgB,SAACxI,EAASqI,GACYrI,EAA5BtE,IAD0B,IAClB+N,EADiB,aACGzJ,EADH,SAGjC,EAAKlD,MAAME,SAASgD,QAAQA,EAAQtE,KAAK6H,IAAzC,eACKkG,EADL,CAEEpB,OACAM,SAAU,EAAK7L,MAAME,SAASoD,YAAYoJ,cA7D3B,EAiEnBf,gBAAkB,SAAA/M,GAChB,EAAKoB,MAAME,SAASgD,QAAQtE,GAAKgO,UAlEhB,EAqEnBC,WAAa,WACX,EAAK7M,MAAM8M,mBAAmB,EAAK9M,MAAMhB,MAAQ,IAnEjD,EAAKX,MAAQ,CACXkN,KAAM,GACNe,SAAS,GALM,E,gEAUZjJ,KAAKrD,MAAMjB,SAASgO,QACvB1J,KAAKiB,SAAS,CAAEgI,SAAS,IAG3BjJ,KAAK4I,wB,yCAGYjM,GACbA,EAAMhB,QAAUqE,KAAKrD,MAAMhB,OAC7BqE,KAAK4I,wB,6CAiBP5I,KAAKrD,MAAME,SAASnB,WAAWiO,Q,+BAqCvB,IAAD,OACCjO,EAAasE,KAAKrD,MAAlBjB,SADD,EAEmBsE,KAAKhF,MAAvBkN,EAFD,EAECA,KAAMe,EAFP,EAEOA,QAEd,OACE,8BACIA,GAAWvN,GACX,4BAAQP,KAAK,SAASuF,QAASV,KAAKwJ,YAApC,QAKDP,GAAW,4CAEXvN,GACC,kBAAC,GAAD,CACEZ,SAAUkF,KAAKrD,MAAM7B,SACrBY,SAAUA,EACV2M,cAAerI,KAAKqI,cACpBC,gBAAiBtI,KAAKsI,mBAIxB5M,GAAY,0DAEd,0BACEwH,SAAU,SAAAC,GAAK,OACb,EAAKgG,gBAAgBhG,EAAO,EAAKxG,MAAM7B,YAGzC,2BACEK,KAAK,OACL0I,MAAOqE,EACPxE,SAAU1D,KAAKkJ,eAEjB,4BAAQ/N,KAAK,UAAb,c,GA7GauB,aCLRiM,GD2IA3C,YACbvJ,EACAoF,aApBsB,SAAA7G,GAAK,MAAK,CAChCF,SAAUE,EAAMiB,aAAanB,SAC7BY,SAAUkO,OAAOC,KAAK7O,EAAMmB,aAAaT,UAAY,IAAIgM,KACvD,SAAAgB,GAAG,sBACE1N,EAAMmB,aAAaT,SAASgN,GAD9B,CAEDnN,IAAKmN,OAGT/M,MAAOX,EAAMmB,aAAaR,UAGD,SAAAuL,GAAQ,MAAK,CACtC8B,cAAe,SAAAtN,GAAQ,OACrBwL,EAAS,CAAE/L,KAAM,eAAgBO,cACnC+N,mBAAoB,SAAA9N,GAAK,OACvBuL,EAAS,CAAE/L,KAAM,qBAAsBQ,eAG5BqK,CAMb2C,IElIa3C,eACbsB,GACAH,IAJgB,SAAArM,GAAQ,QAAMA,KAEjBkL,EAXE,kBACf,6BACE,yCACA,mFAEA,kBAAC,GAAD,UCPEnL,GAAgB,CACpB+H,YAAa,GACbC,YAAa,GACbG,MAAO,MAGH8G,G,kDACJ,WAAYnN,GAAQ,IAAD,8BACjB,cAAMA,IAKRuG,SAAW,SAAAC,GAAU,IACXP,EAAgB,EAAK5H,MAArB4H,YAER,EAAKjG,MAAME,SACRgC,iBAAiB+D,GACjBxD,MAAK,WACJ,EAAK6B,SAAL,eAAmBpG,QAEpB0I,OAAM,SAAAP,GACL,EAAK/B,SAAS,CAAE+B,aAGpBG,EAAMM,kBAlBW,EAqBnBC,SAAW,SAAAP,GACT,EAAKlC,SAAL,eAAiBkC,EAAMQ,OAAOC,KAAOT,EAAMQ,OAAOE,SAnBlD,EAAK7I,MAAL,eAAkBH,IAHD,E,qDAyBT,IAAD,EACqCmF,KAAKhF,MAAzC4H,EADD,EACCA,YAAaC,EADd,EACcA,YAAaG,EAD3B,EAC2BA,MAE5BgB,EACJpB,IAAgBC,GAA+B,KAAhBD,EAEjC,OACE,0BAAMM,SAAUlD,KAAKkD,UACnB,2BACEU,KAAK,cACLC,MAAOjB,EACPc,SAAU1D,KAAK0D,SACfvI,KAAK,WACL4O,YAAY,iBAEd,2BACEnG,KAAK,cACLC,MAAOhB,EACPa,SAAU1D,KAAK0D,SACfvI,KAAK,WACL4O,YAAY,yBAEd,4BAAQvF,SAAUR,EAAW7I,KAAK,UAAlC,qBAIC6H,GAAS,2BAAIA,EAAMnD,c,GApDKnD,aA0DlBD,KAAaqN,IC3DtBE,GAAkB,CACtB,CACE5H,GAAI,WACJuF,SAAU,MAEZ,CACEvF,GAAI,aACJuF,SAAU,kBAEZ,CACEvF,GAAI,eACJuF,SAAU,oBAEZ,CACEvF,GAAI,cACJuF,SAAU,oBAYRsC,G,kDACJ,WAAYtN,GAAQ,IAAD,8BACjB,cAAMA,IAYRuN,mBAAqB,WACnB,EAAKvN,MAAME,SAASa,KACjByM,2BAA2B,EAAKxN,MAAM7B,SAAS0C,OAC/C4B,MAAK,SAAAgL,GAAmB,OACvB,EAAKnJ,SAAS,CAAEmJ,sBAAqBpH,MAAO,UAE7CO,OAAM,SAAAP,GAAK,OAAI,EAAK/B,SAAS,CAAE+B,cAnBjB,EAsBnBqH,kBAAoB,SAAA1C,GAClB,EAAKhL,MAAME,SAASa,KAAKgB,YACtB4L,cAAc,EAAK3N,MAAME,SAAS8K,IAClCvI,KAAK,EAAK8K,oBACV3G,OAAM,SAAAP,GAAK,OAAI,EAAK/B,SAAS,CAAE+B,cA1BjB,EA6BnBuH,mBAAqB,SAAA9M,GACnB,IAAM+M,EAAa,EAAK7N,MAAME,SAASuD,kBAAkBoK,WACvD,EAAK7N,MAAM7B,SAAS0C,MACpBC,GAGF,EAAKd,MAAME,SAASa,KAAKgB,YACtB+L,kCAAkCD,GAClCpL,KAAK,EAAK8K,oBACV3G,OAAM,SAAAP,GAAK,OAAI,EAAK/B,SAAS,CAAE+B,cAtCjB,EAyCnB0H,SAAW,SAAA9C,GACT,EAAKjL,MAAME,SAASa,KAAKgB,YACtBiM,OAAO/C,GACPxI,KAAK,EAAK8K,oBACV3G,OAAM,SAAAP,GAAK,OAAI,EAAK/B,SAAS,CAAE+B,cA1ClC,EAAKhI,MAAQ,CACXoP,oBAAqB,GACrBpH,MAAO,MALQ,E,gEAUjBhD,KAAKkK,uB,+BAsCG,IAAD,SACgClK,KAAKhF,MAApCoP,EADD,EACCA,oBAAqBpH,EADtB,EACsBA,MAE7B,OACE,gDAEE,4BACGgH,GAAgBtC,KAAI,SAAAkD,GACnB,IAAMC,EAA6C,IAA/BT,EAAoBV,OAClCoB,EAAYV,EAAoBvC,SACpC+C,EAAaxI,IAGf,OACE,wBAAIsG,IAAKkC,EAAaxI,IACC,aAApBwI,EAAaxI,GACZ,kBAAC,GAAD,CACEyI,YAAaA,EACbC,UAAWA,EACXF,aAAcA,EACdG,OAAQ,EAAKR,mBACbG,SAAU,EAAKA,WAGjB,kBAAC,GAAD,CACEG,YAAaA,EACbC,UAAWA,EACXF,aAAcA,EACdG,OAAQ,EAAKV,kBACbK,SAAU,EAAKA,gBAO1B1H,GAASA,EAAMnD,a,GArFUnD,aA2F5BsO,GAAoB,SAAC,GAAD,IACxBH,EADwB,EACxBA,YACAC,EAFwB,EAExBA,UACAF,EAHwB,EAGxBA,aACAG,EAJwB,EAIxBA,OACAL,EALwB,EAKxBA,SALwB,OAOxBI,EACE,4BACE3P,KAAK,SACLuF,QAAS,kBAAMgK,EAASE,EAAaxI,KACrCoC,SAAUqG,GAHZ,cAKcD,EAAaxI,IAG3B,4BACEjH,KAAK,SACLuF,QAAS,kBAAMqK,EAAOH,EAAajD,YAFrC,QAIQiD,EAAaxI,KAInB6I,G,kDACJ,WAAYtO,GAAQ,IAAD,8BACjB,cAAMA,IAKRuG,SAAW,SAAAC,GACTA,EAAMM,iBAEN,EAAK9G,MAAMoO,OAAO,EAAK/P,MAAM4H,aAC7B,EAAK3B,SAAS,CAAE2B,YAAa,GAAIC,YAAa,MAV7B,EAanBa,SAAW,SAAAP,GACT,EAAKlC,SAAL,eAAiBkC,EAAMQ,OAAOC,KAAOT,EAAMQ,OAAOE,SAXlD,EAAK7I,MAAQ,CAAE4H,YAAa,GAAIC,YAAa,IAH5B,E,qDAiBT,IAAD,EAMH7C,KAAKrD,MAJPkO,EAFK,EAELA,YACAC,EAHK,EAGLA,UACAF,EAJK,EAILA,aACAF,EALK,EAKLA,SALK,EAQ8B1K,KAAKhF,MAAlC4H,EARD,EAQCA,YAAaC,EARd,EAQcA,YAEfmB,EACJpB,IAAgBC,GAA+B,KAAhBD,EAEjC,OAAOkI,EACL,4BACE3P,KAAK,SACLuF,QAAS,kBAAMgK,EAASE,EAAaxI,KACrCoC,SAAUqG,GAHZ,cAKcD,EAAaxI,IAG3B,0BAAMc,SAAUlD,KAAKkD,UACnB,2BACEU,KAAK,cACLC,MAAOjB,EACPc,SAAU1D,KAAK0D,SACfvI,KAAK,WACL4O,YAAY,iBAEd,2BACEnG,KAAK,cACLC,MAAOhB,EACPa,SAAU1D,KAAK0D,SACfvI,KAAK,WACL4O,YAAY,yBAGd,4BAAQvF,SAAUR,EAAW7I,KAAK,UAAlC,QACQyP,EAAaxI,S,GAzDI1F,aAgE3BwO,GAAkBzO,EAAawN,IAQtBjE,eACbnE,aAPsB,SAAA7G,GAAK,MAAK,CAChCF,SAAUE,EAAMiB,aAAanB,aAO7BwM,GACAH,IALgB,SAAArM,GAAQ,QAAMA,KAEjBkL,EAnMK,SAAC,GAAD,IAAGlL,EAAH,EAAGA,SAAH,OAClB,6BACE,wCAAcA,EAAS0C,OACvB,kBAAC2N,GAAD,MACA,kBAACD,GAAD,CAAiBpQ,SAAUA,QCxBzBsQ,G,kDACJ,WAAYzO,GAAQ,IAAD,8BACjB,cAAMA,IAED3B,MAAQ,CACXiO,SAAS,GAJM,E,gEAQE,IAAD,OACbjJ,KAAKrD,MAAMvB,MAAMsO,QACpB1J,KAAKiB,SAAS,CAAEgI,SAAS,IAG3BjJ,KAAKrD,MAAME,SAASzB,QAAQ2N,GAAG,SAAS,SAAA1J,GACtC,EAAK1C,MAAM0O,WAAWhM,EAASE,OAE/B,EAAK0B,SAAS,CAAEgI,SAAS,S,6CAK3BjJ,KAAKrD,MAAME,SAASzB,QAAQuO,Q,+BAGpB,IACAvO,EAAU4E,KAAKrD,MAAfvB,MACA6N,EAAYjJ,KAAKhF,MAAjBiO,QAER,OACE,6BACE,qCACCA,GAAW,4CACZ,4BACG7N,EAAMsM,KAAI,SAAAlM,GAAI,OACb,wBAAIkN,IAAKlN,EAAKD,KACZ,8BACE,uCADF,IACwBC,EAAKD,KAE7B,8BACE,2CADF,IAC4BC,EAAKgC,OAEjC,8BACE,6CADF,IAC8BhC,EAAKmH,UAEnC,8BACE,kBAAC,IAAD,CAAMlB,GAAE,UlB9CH,SkB8CG,YAAqBjG,EAAKD,MAAlC,sB,GA9COmB,aAqERsJ,eACbvJ,EACAoF,aAbsB,SAAA7G,GAAK,MAAK,CAChCI,MAAOwO,OAAOC,KAAK7O,EAAMkB,UAAUd,OAAS,IAAIsM,KAAI,SAAAgB,GAAG,sBAClD1N,EAAMkB,UAAUd,MAAMsN,GAD4B,CAErDnN,IAAKmN,WAIkB,SAAAxB,GAAQ,MAAK,CACtCmE,WAAY,SAAAjQ,GAAK,OAAI8L,EAAS,CAAE/L,KAAM,YAAaC,eAGtC4K,CAMboF,IC7EIE,G,kDACJ,WAAY3O,GAAQ,IAAD,8BACjB,cAAMA,IA4BR4O,yBAA2B,WACzB,EAAK5O,MAAME,SAAS0B,gBAAgB,EAAK5B,MAAMnB,KAAKgC,QA3BpD,EAAKxC,MAAQ,CACXiO,SAAS,GAJM,E,gEAQE,IAAD,OACbjJ,KAAKrD,MAAMnB,MACdwE,KAAKiB,SAAS,CAAEgI,SAAS,IAG3BjJ,KAAKrD,MAAME,SACRrB,KAAKwE,KAAKrD,MAAM/B,MAAM4Q,OAAOpJ,IAC7B2G,GAAG,SAAS,SAAA1J,GACX,EAAK1C,MAAM8O,UACTpM,EAASE,MACT,EAAK5C,MAAM/B,MAAM4Q,OAAOpJ,IAG1B,EAAKnB,SAAS,CAAEgI,SAAS,S,6CAK7BjJ,KAAKrD,MAAME,SAASrB,KAAKwE,KAAKrD,MAAM/B,MAAM4Q,OAAOpJ,IAAIuH,Q,+BAO7C,IACAnO,EAASwE,KAAKrD,MAAdnB,KACAyN,EAAYjJ,KAAKhF,MAAjBiO,QAER,OACE,6BACE,qCAAWjJ,KAAKrD,MAAM/B,MAAM4Q,OAAOpJ,GAAnC,KACC6G,GAAW,4CAEXzN,GACC,6BACE,8BACE,uCADF,IACwBA,EAAKD,KAE7B,8BACE,2CADF,IAC4BC,EAAKgC,OAEjC,8BACE,6CADF,IAC8BhC,EAAKmH,UAEnC,8BACE,4BACExH,KAAK,SACLuF,QAASV,KAAKuL,0BAFhB,8B,GAvDS7O,aA6ERsJ,eACbvJ,EACAoF,aAVsB,SAAC7G,EAAO2B,GAAR,MAAmB,CACzCnB,MAAOR,EAAMkB,UAAUd,OAAS,IAAIuB,EAAM/B,MAAM4Q,OAAOpJ,QAG9B,SAAA8E,GAAQ,MAAK,CACtCuE,UAAW,SAACjQ,EAAMD,GAAP,OAAe2L,EAAS,CAAE/L,KAAM,WAAYK,OAAMD,aAGhDyK,CAMbsF,ICjEatF,eACbsB,GACAH,IALgB,SAAArM,GAAQ,OACxBA,KAAcA,EAAS0E,MAAT,SAEDwG,EAfG,kBAChB,6BACE,qCACA,0FAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0F,OAAK,EAACC,KpBNU,aoBMkBC,UAAWN,KACpD,kBAAC,IAAD,CAAOI,OAAK,EAACC,KpBRE,SoBQkBC,UAAWR,UCRnCS,GANO,kBACpB,6BACE,+CC+BWtF,OAnBH,kBACV,6BACI,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOmF,OAAK,EAACC,KtBrBA,IsBqBsBC,UAAWE,IAC9C,kBAAC,IAAD,CAAOH,KtBrBM,UsBqBgBC,UAAWjH,IACxC,kBAAC,IAAD,CAAOgH,KAAMjK,EAAYkK,UAAW7G,IACpC,kBAAC,IAAD,CAAO4G,KtBrBS,csBqBgBC,UAAWC,KAC3C,kBAAC,IAAD,CAAOF,KtBrBM,UsBqBgBC,UAAW3F,KACxC,kBAAC,IAAD,CAAO0F,KtBnBc,asBmBgBC,UAAWvF,KAChD,kBAAC,IAAD,CAAOsF,KAAMjK,EAAakK,UAAWG,KACrC,kBAAC,IAAD,CAAOJ,KtBtBM,WsBsBgBC,UAAWI,KACxC,kBAAC,IAAD,CAAOL,KtBrBI,SsBqBgBC,UAAWK,WCdhDC,IAASC,OACP,kBAAC,IAAD,CAAU/P,MAAOA,GACf,kBAAC,EAAgBgQ,SAAjB,CAA0BvI,MAAO,IAAIvG,GACnC,kBAAC,GAAD,QAGJ+O,SAASC,eAAe,SjC4GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrN,MAAK,SAAAsN,GACjCA,EAAaC,kB","file":"static/js/main.7d8bfe9f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const INITIAL_STATE = {\n  authUser: null,\n};\n\nconst applySetAuthUser = (state, action) => ({\n  ...state,\n  authUser: action.authUser,\n});\n\nfunction sessionReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'AUTH_USER_SET': {\n      return applySetAuthUser(state, action);\n    }\n    default:\n      return state;\n  }\n}\n\nexport default sessionReducer;\n","const INITIAL_STATE = {\n  users: null,\n};\n\nconst applySetUsers = (state, action) => ({\n  ...state,\n  users: action.users,\n});\n\nconst applySetUser = (state, action) => ({\n  ...state,\n  users: {\n    ...state.users,\n    [action.uid]: action.user,\n  },\n});\n\nfunction userReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'USERS_SET': {\n      return applySetUsers(state, action);\n    }\n    case 'USER_SET': {\n      return applySetUser(state, action);\n    }\n    default:\n      return state;\n  }\n}\n\nexport default userReducer;\n","const INITIAL_STATE = {\n  messages: null,\n  limit: 5,\n};\n\nconst applySetMessages = (state, action) => ({\n  ...state,\n  messages: action.messages,\n});\n\nconst applySetMessagesLimit = (state, action) => ({\n  ...state,\n  limit: action.limit,\n});\n\nfunction messageReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'MESSAGES_SET': {\n      return applySetMessages(state, action);\n    }\n    case 'MESSAGES_LIMIT_SET': {\n      return applySetMessagesLimit(state, action);\n    }\n    default:\n      return state;\n  }\n}\n\nexport default messageReducer;\n","import { combineReducers } from 'redux';\nimport sessionReducer from './session';\nimport userReducer from './user';\nimport messageReducer from './message';\n\nconst rootReducer = combineReducers({\n  sessionState: sessionReducer,\n  userState: userReducer,\n  messageState: messageReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: \" AIzaSyAS75DYoT6jkHCC4lixCd0ECE3-Hx5ExLs\",\n  authDomain: \"fisheries-2c0cb.firebaseapp.com\",\n  databaseURL: \"https://fisheries-2c0cb.firebaseio.com/\",\n  projectId: \"fisheries-2c0cb\",\n  storageBucket: \"gs://fisheries-2c0cb.appspot.com\",\n  messagingSenderId: \"712940355681\",\n  appId: \"1:712940355681:web:e4d035dd7dbd4781c62a20\",\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    /* Helper */\n\n    this.serverValue = app.database.ServerValue;\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\n\n    /* Firebase APIs */\n\n    this.auth = app.auth();\n    this.db = app.database();\n\n    /* Social Sign In Method Provider */\n\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\n    this.twitterProvider = new app.auth.TwitterAuthProvider();\n  }\n\n  // *** Auth API ***\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignInWithGoogle = () =>\n    this.auth.signInWithPopup(this.googleProvider);\n\n  doSignInWithFacebook = () =>\n    this.auth.signInWithPopup(this.facebookProvider);\n\n  doSignInWithTwitter = () =>\n    this.auth.signInWithPopup(this.twitterProvider);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doSendEmailVerification = () =>\n    this.auth.currentUser.sendEmailVerification({\n      url: \"http://localhost:3000\",\n    });\n\n  doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n\n  // *** Merge Auth and DB User API *** //\n\n  onAuthUserListener = (next, fallback) =>\n    this.auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        this.user(authUser.uid)\n          .once('value')\n          .then(snapshot => {\n            const dbUser = snapshot.val();\n\n            // default empty roles\n            if (!dbUser.roles) {\n              dbUser.roles = {};\n            }\n\n            // merge auth and db user\n            authUser = {\n              uid: authUser.uid,\n              email: authUser.email,\n              emailVerified: authUser.emailVerified,\n              providerData: authUser.providerData,\n              ...dbUser,\n            };\n\n            next(authUser);\n          });\n      } else {\n        fallback();\n      }\n    });\n\n  // *** User API ***\n\n  user = uid => this.db.ref(`users/${uid}`);\n\n  users = () => this.db.ref('users');\n\n  // *** Message API ***\n\n  message = uid => this.db.ref(`messages/${uid}`);\n\n  messages = () => this.db.ref('messages');\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\nimport { MDBBtn } from \"mdbreact\";\nimport { withFirebase } from '../Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n  <MDBBtn size=\"sm\" onClick={firebase.doSignOut}>\n    Sign Out\n  </MDBBtn>\n);\n\nexport default withFirebase(SignOutButton);\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const TAC = '/terms-cond';\nexport const USER_GUIDE = '/user-guide';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const ADMIN = '/admin';\nexport const ADMIN_DETAILS = '/admin/:id';\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarNav,\n  MDBNavbarToggler,\n  MDBCollapse,\n  MDBNavItem,\n  MDBNavLink,\n  MDBContainer,\n} from \"mdbreact\";\nimport SignOutButton from \"../SignOut\";\nimport * as ROUTES from \"../../constants/routes\";\nimport * as ROLES from \"../../constants/roles\";\n\nconst Navigation = ({ authUser }) =>\n  authUser ? <NavigationAuth authUser={authUser} /> : <NavigationNonAuth />;\n\nclass NavigationAuth extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: false,\n      isWideEnough: false,\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.setState({\n      collapse: !this.state.collapse,\n    });\n  }\n\n  render() {\n    return (\n      <MDBNavbar color=\"blue\" dark expand=\"md\">\n        <MDBContainer>\n          <MDBNavbarBrand href=\"/\">\n            <strong>Fisheries</strong>\n          </MDBNavbarBrand>\n          <MDBNavbarToggler onClick={this.onClick} />\n          <MDBCollapse isOpen={this.state.collapse} navbar>\n            <MDBNavbarNav right>\n              <MDBNavItem>\n                <MDBNavLink /*onClick={this.onClick}*/ to={ROUTES.HOME}>Home</MDBNavLink>\n              </MDBNavItem>\n              <MDBNavItem>\n                <MDBNavLink /*onClick={this.onClick}*/ to={ROUTES.ACCOUNT}>Account</MDBNavLink>\n              </MDBNavItem>\n              {!!this.props.authUser.roles[ROLES.ADMIN] && (\n                <MDBNavItem >\n                  <MDBNavLink /*onClick={this.onClick}*/ to={ROUTES.ADMIN}>Admin</MDBNavLink>\n                </MDBNavItem>\n              )}\n              <MDBNavItem>\n                <SignOutButton />\n              </MDBNavItem>\n            </MDBNavbarNav>\n          </MDBCollapse>\n        </MDBContainer>\n      </MDBNavbar>\n    );\n  }\n}\n\nclass NavigationNonAuth extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: false,\n      isWideEnough: false,\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.setState({\n      collapse: !this.state.collapse,\n    });\n  }\n\n  render() {\n    return (\n      <MDBNavbar color=\"blue\" dark expand=\"md\">\n        <MDBContainer>\n          <MDBNavbarBrand href=\"/\">\n            <strong>Fisheries</strong>\n          </MDBNavbarBrand>\n          <MDBNavbarToggler onClick={this.onClick} />\n          <MDBCollapse isOpen={this.state.collapse} navbar>\n            <MDBNavbarNav right>\n              <MDBNavItem>\n                <MDBNavLink /*onClick={this.onClick}*/ to={ROUTES.LANDING}>Home</MDBNavLink>\n              </MDBNavItem>\n              <MDBNavItem>\n                <MDBNavLink /*onClick={this.onClick}*/ to={ROUTES.SIGN_IN}>Sign In</MDBNavLink>\n              </MDBNavItem>\n              <MDBNavItem>\n                <MDBNavLink /*onClick={this.onClick}*/ to={ROUTES.SIGN_UP}>Sign Up</MDBNavLink>\n              </MDBNavItem>\n            </MDBNavbarNav>\n          </MDBCollapse>\n        </MDBContainer>\n      </MDBNavbar>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  authUser: state.sessionState.authUser,\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as ROUTES from \"../../constants/routes\";\n\nimport {\n  MDBEdgeHeader,\n  MDBBtn,\n  MDBFreeBird,\n  MDBContainer,\n  MDBCol,\n  MDBRow,\n  MDBCardBody,\n  MDBIcon,\n  MDBCard,\n  MDBCardTitle,\n  MDBCardImage,\n  MDBCardText,\n  MDBAnimation,\n  MDBNavLink,\n  MDBFooter,\n} from \"mdbreact\";\nimport \"./index.css\";\n\nconst Landing = () => {\n  const scrollToTop = () => window.scrollTo(0, 0);\n\n  return (\n    <>\n      <MDBEdgeHeader color=\"blue\" className=\"sectionPage\" />\n      <div className=\"mt-3 mb-5\">\n        <MDBFreeBird>\n          <MDBRow>\n            <MDBCol\n              md=\"10\"\n              className=\"mx-auto float-none white z-depth-1 py-2 px-2\"\n            >\n              <MDBCardBody className=\"text-center\">\n                <h2 className=\"h2-responsive mb-4\">\n                  <strong className=\"font-weight-bold\">\n                    {/* <img\n                      src=\"https://mdbootstrap.com/img/Marketing/other/logo/logo-mdb-react-small.png\"\n                      alt=\"mdbreact-logo\"\n                      className=\"pr-2\"\n                    /> */}\n                    Fisheries Web\n                  </strong>\n                </h2>\n                <MDBRow />\n                <p>Short Description</p>\n                <p className=\"pb-4\">\n                  This application shows the actual use of Fisheries Mobile App.\n                </p>\n                <MDBRow className=\"d-flex flex-row justify-content-center row\">\n                  <Link\n                    className=\"border nav-link border-light rounded mr-1 mx-2 mb-2 font-weight-bold\"\n                    to={ROUTES.USER_GUIDE}\n                  >\n                    <MDBIcon icon=\"graduation-cap\" className=\"mr-2\" />\n                    User Guide\n                  </Link>\n\n                  <Link\n                    className=\"border nav-link border-light rounded mx-2 mb-2 font-weight-bold\"\n                    to={ROUTES.SIGN_UP}\n                  >\n                    <MDBIcon icon=\"fish\" className=\"mr-2\" />\n                    Register Now\n                  </Link>\n                </MDBRow>\n              </MDBCardBody>\n            </MDBCol>\n          </MDBRow>\n        </MDBFreeBird>\n        <MDBContainer>\n          <MDBRow>\n            <MDBCol md=\"12\" className=\"mt-4\">\n              <h2 className=\"text-center my-5 font-weight-bold\">\n                What we offer?\n              </h2>\n              <p className=\"text-center text-muted mb-1\">\n                A small paragraph of what we offer\n              </p>\n              <p className=\"text-center text-muted mb-1\">Line 2</p>\n              <p className=\"text-center text-muted\">Line 3</p>\n              <hr className=\"my-5\" />\n              <MDBRow id=\"categories\">\n                <MDBCol md=\"4\">\n                  <MDBAnimation reveal type=\"fadeInLeft\">\n                    <MDBCard cascade className=\"my-3 grey lighten-4\">\n                      <MDBCardImage\n                        cascade\n                        className=\"images\"\n                        src=\"https://upload.wikimedia.org/wikipedia/commons/2/23/Global_tropical_cyclone_tracks-edit2.jpg\"\n                      />\n                      <MDBCardBody cascade className=\"text-center\">\n                        <MDBCardTitle>\n                          <MDBIcon\n                            icon=\"cloud-sun-rain\"\n                            className=\"blue-text pr-2\"\n                          />\n                          <strong>WEATHER</strong>\n                        </MDBCardTitle>\n                        <MDBCardText>About Weather...</MDBCardText>\n                        <MDBNavLink\n                          tag=\"button\"\n                          to=\"/weather\"\n                          color=\"mdb-color\"\n                          className=\"btn btn-outline-mdb-color btn-sm btn-rounded d-inline\"\n                          onClick={scrollToTop}\n                        >\n                          More\n                        </MDBNavLink>\n                      </MDBCardBody>\n                    </MDBCard>\n                  </MDBAnimation>\n                </MDBCol>\n                <MDBCol md=\"4\">\n                  <MDBAnimation reveal type=\"fadeInDown\">\n                    <MDBCard cascade className=\"my-3 grey lighten-4\">\n                      <MDBCardImage\n                        cascade\n                        src=\"https://upload.wikimedia.org/wikipedia/commons/6/6e/Redear_sunfish_FWS_1.jpg\"\n                        className=\"images\"\n                      />\n                      <MDBCardBody cascade className=\"text-center\">\n                        <MDBCardTitle>\n                          <MDBIcon icon=\"copy\" className=\"blue-text pr-2\" />\n                          <strong>REPORTS</strong>\n                        </MDBCardTitle>\n                        <MDBCardText>About catch reporting...</MDBCardText>\n                        <MDBNavLink\n                          tag=\"button\"\n                          to=\"/reports\"\n                          color=\"mdb-color\"\n                          className=\"btn btn-outline-mdb-color btn-sm btn-rounded d-inline\"\n                          onClick={scrollToTop}\n                        >\n                          More\n                        </MDBNavLink>\n                      </MDBCardBody>\n                    </MDBCard>\n                  </MDBAnimation>\n                </MDBCol>\n                <MDBCol md=\"4\">\n                  <MDBAnimation reveal type=\"fadeInRight\">\n                    <MDBCard cascade className=\"my-3 grey lighten-4\">\n                      <MDBCardImage\n                        cascade\n                        className=\"images\"\n                        src=\"https://upload.wikimedia.org/wikipedia/commons/3/3c/Eucalyp-Deus_Books.png\"\n                      />\n                      <MDBCardBody cascade className=\"text-center\">\n                        <MDBCardTitle>\n                          <MDBIcon\n                            icon=\"book-open\"\n                            className=\"green-text pr-2\"\n                          />\n                          <strong>LIBRARY</strong>\n                        </MDBCardTitle>\n                        <MDBCardText>About Library...</MDBCardText>\n\n                        <MDBNavLink\n                          tag=\"button\"\n                          to=\"/library\"\n                          color=\"mdb-color\"\n                          className=\"btn btn-outline-mdb-color btn-sm btn-rounded d-inline\"\n                          onClick={scrollToTop}\n                        >\n                          More\n                        </MDBNavLink>\n                      </MDBCardBody>\n                    </MDBCard>\n                  </MDBAnimation>\n                </MDBCol>\n              </MDBRow>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n      </div>\n      <MDBFooter color=\"blue\">\n        <p className=\"footer-copyright mb-0 py-3 text-center\">\n          &copy; {new Date().getFullYear()} Copyright:&nbsp;\n          <MDBBtn size=\"sm\" onClick={scrollToTop}>\n            fisheries-2c0cb.web.app\n          </MDBBtn>\n        </p>\n      </MDBFooter>\n    </>\n  );\n};\n\nexport default Landing;\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBCard,\n  MDBCardBody,\n  MDBInput,\n  MDBModalFooter,\n  MDBBtn,\n} from \"mdbreact\";\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\nimport * as ROLES from \"../../constants/roles\";\n\nconst SignUpPage = () => (\n  <div style={{ paddingBottom: 30, paddingTop: 30 }}>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: \"\",\n  email: \"\",\n  passwordOne: \"\",\n  passwordTwo: \"\",\n  isAdmin: false,\n  acceptTerms: false,\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS = \"auth/email-already-in-use\";\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with this E-Mail address already exists.\n  Try to login with this account instead. If you think the\n  account is already used from one of the social logins, try\n  to sign in with one of them. Afterward, associate your accounts\n  on your personal account page.\n`;\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const { username, email, passwordOne, isAdmin } = this.state;\n    const roles = {};\n\n    if (isAdmin) {\n      roles[ROLES.ADMIN] = ROLES.ADMIN;\n    }\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then((authUser) => {\n        // Create a user in your Firebase realtime database\n        return this.props.firebase.user(authUser.user.uid).set({\n          username,\n          email,\n          roles,\n        });\n      })\n      .then(() => {\n        return this.props.firebase.doSendEmailVerification();\n      })\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onChangeCheckbox = (event) => {\n    this.setState({ [event.target.name]: event.target.checked });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      isAdmin,\n      acceptTerms,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === \"\" ||\n      email === \"\" ||\n      username === \"\" ||\n      acceptTerms === false;\n\n    return (\n      <MDBContainer>\n        <MDBRow>\n          <MDBCol md=\"3\"></MDBCol>\n          <MDBCol md=\"6\">\n            <MDBCard>\n              <MDBCardBody className=\"mx-4\">\n                <div className=\"text-center\">\n                  <h3 className=\"dark-grey-text mb-5\">\n                    <strong>Sign up</strong>\n                  </h3>\n                </div>\n                <MDBInput\n                  name=\"username\"\n                  label=\"Enter your username\"\n                  value={username}\n                  onChange={this.onChange}\n                  group\n                  type=\"text\"\n                  validate\n                />\n                <MDBInput\n                  name=\"email\"\n                  label=\"Enter your email\"\n                  value={email}\n                  onChange={this.onChange}\n                  group\n                  type=\"email\"\n                  validate\n                />\n                <MDBInput\n                  name=\"passwordOne\"\n                  value={passwordOne}\n                  onChange={this.onChange}\n                  label=\"Enter your password\"\n                  group\n                  type=\"password\"\n                  validate\n                />\n                <MDBInput\n                  name=\"passwordTwo\"\n                  value={passwordTwo}\n                  onChange={this.onChange}\n                  label=\"Confirm your password\"\n                  group\n                  type=\"password\"\n                  validate\n                />\n                <div className=\"custom-control custom-checkbox pl-3 m-3\">\n                  <input\n                    className=\"custom-control-input\"\n                    type=\"checkbox\"\n                    name=\"isAdmin\"\n                    onChange={this.onChangeCheckbox}\n                    value={isAdmin}\n                    id=\"invalidCheck1\"\n                    required\n                  />\n                  <label\n                    className=\"custom-control-label\"\n                    htmlFor=\"invalidCheck1\"\n                  >\n                    Check for an admin account\n                  </label>\n                </div>\n                <div className=\"custom-control custom-checkbox pl-3 m-3\">\n                  <input\n                    className=\"custom-control-input\"\n                    type=\"checkbox\"\n                    name=\"acceptTerms\"\n                    onChange={this.onChangeCheckbox}\n                    value={acceptTerms}\n                    id=\"invalidCheck2\"\n                    required\n                  />\n                  <label\n                    className=\"custom-control-label\"\n                    htmlFor=\"invalidCheck2\"\n                  >\n                    <>\n                        Accept&nbsp;\n                        <Link to={ROUTES.TAC}>the terms and conditions</Link>\n                      </>\n                  </label>\n                </div>\n                <MDBRow className=\"d-flex align-items-center mb-4\">\n                  <MDBCol md=\"12\" className=\"text-center\">\n                    <MDBBtn\n                      type=\"button\"\n                      gradient=\"blue\"\n                      rounded\n                      disabled={isInvalid}\n                      onClick={this.onSubmit}\n                      className=\"btn-block z-depth-1a\"\n                    >\n                      Sgin Up\n                    </MDBBtn>\n                    {error && <p>{error.message}</p>}\n                  </MDBCol>\n                </MDBRow>\n              </MDBCardBody>\n              <MDBModalFooter className=\"mx-5 pt-3 mb-1\">\n                <p className=\"font-small grey-text d-flex justify-content-end\">\n                  Have an account?\n                  <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n                </p>\n              </MDBModalFooter>\n            </MDBCard>\n          </MDBCol>\n          <MDBCol md=\"3\"></MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n","export const ADMIN = 'ADMIN';\n","import React from 'react';\n\nconst TermsPage = () => (\n  <div>\n    <h1>Terms and Conditions</h1>\n  </div>\n);\n\nexport default TermsPage;\n","import React, { Component } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBCard,\n  MDBCardBody,\n  MDBInput,\n  MDBBtn,\n  MDBIcon,\n  MDBModalFooter,\n} from \"mdbreact\";\n\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst SignInPage = () => (\n  <div style={{paddingBottom: 30, paddingTop: 30}}>\n    <SignInForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: \"\",\n  password: \"\",\n  error: null,\n  errorFb: null,\n  errorGoogle: null,\n  errorTwitter: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS =\n  \"auth/account-exists-with-different-credential\";\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with an E-Mail address to\n  this social account already exists. Try to login from\n  this account instead and associate your social accounts on\n  your personal account page.\n`;\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onSubmitGoogle = (event) => {\n    this.props.firebase\n      .doSignInWithGoogle()\n      .then((socialAuthUser) => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.user.displayName,\n          email: socialAuthUser.user.email,\n          roles: {},\n        });\n      })\n      .then(() => {\n        this.setState({ errorGoogle: null });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onSubmitFb = (event) => {\n    this.props.firebase\n      .doSignInWithFacebook()\n      .then((socialAuthUser) => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: {},\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onSubmitTwitter = (event) => {\n    this.props.firebase\n      .doSignInWithTwitter()\n      .then((socialAuthUser) => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: {},\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch((error) => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      email,\n      password,\n      error,\n      errorGoogle,\n      errorFb,\n      errorTwitter,\n    } = this.state;\n\n    const isInvalid = password === \"\" || email === \"\";\n    return (\n      <MDBContainer>\n        <MDBRow>\n          <MDBCol md=\"3\">\n          </MDBCol>\n          <MDBCol md=\"6\">\n            <MDBCard>\n              <MDBCardBody className=\"mx-4\">\n                <div className=\"text-center\">\n                  <h3 className=\"dark-grey-text mb-5\">\n                    <strong>Sign in</strong>\n                  </h3>\n                </div>\n                <MDBInput\n                  label=\"Your email\"\n                  name=\"email\"\n                  group\n                  type=\"email\"\n                  validate\n                  value={email}\n                  onChange={this.onChange}\n                  error=\"wrong\"\n                  success=\"right\"\n                />\n                <MDBInput\n                  label=\"Your password\"\n                  name=\"password\"\n                  group\n                  type=\"password\"\n                  value={password}\n                  onChange={this.onChange}\n                  validate\n                  containerClass=\"mb-0\"\n                />\n                <p className=\"font-small blue-text d-flex justify-content-end pb-3\">\n                  <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n                </p>\n                <div className=\"text-center mb-3\">\n                  <MDBBtn\n                    type=\"button\"\n                    gradient=\"blue\"\n                    rounded\n                    disabled={isInvalid}\n                    onClick={this.onSubmit}\n                    className=\"btn-block z-depth-1a\"\n                  >\n                    Sign in\n                  </MDBBtn>\n                  {error && <p>{error.message}</p>}\n                </div>\n                <p className=\"font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2\">\n                  or Sign in with:\n                </p>\n                <div className=\"row my-3 d-flex justify-content-center\">\n                  <MDBBtn\n                    type=\"button\"\n                    color=\"white\"\n                    rounded\n                    onClick={this.onSubmitFb}\n                    className=\"mr-md-3 z-depth-1a\"\n                  >\n                    <MDBIcon\n                      fab\n                      icon=\"facebook-f\"\n                      className=\"blue-text text-center\"\n                    />\n                  </MDBBtn>\n                  {errorFb && <p>{errorFb.message}</p>}\n                  <MDBBtn\n                    type=\"button\"\n                    color=\"white\"\n                    rounded\n                    onClick={this.onSubmitTwitter}\n                    className=\"mr-md-3 z-depth-1a\"\n                  >\n                    <MDBIcon fab icon=\"twitter\" className=\"blue-text\" />\n                  </MDBBtn>\n                  {errorTwitter && <p>{errorTwitter.message}</p>}\n                  <MDBBtn\n                    type=\"button\"\n                    color=\"white\"\n                    rounded\n                    onClick={this.onSubmitGoogle}\n                    className=\"z-depth-1a\"\n                  >\n                    <MDBIcon fab icon=\"google-plus-g\" className=\"blue-text\" />\n                  </MDBBtn>\n                  {errorGoogle && <p>{errorGoogle.message}</p>}\n                </div>\n              </MDBCardBody>\n              <MDBModalFooter className=\"mx-5 pt-3 mb-1\">\n                <p className=\"font-small grey-text d-flex justify-content-end\">\n                  Not a member?\n                  <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n                </p>\n              </MDBModalFooter>\n            </MDBCard>\n          </MDBCol>\n          <MDBCol md=\"3\"> \n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    );\n  }\n}\n\nconst SignInForm = compose(withRouter, withFirebase)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm };\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBBtn,\n  MDBIcon,\n  MDBCard,\n  MDBCardBody,\n  MDBInput,\n  MDBModalFooter,\n} from \"mdbreact\";\n\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst PasswordForgetPage = () => (\n  <div style={{ paddingBottom: 30, paddingTop: 30 }}>\n    <PasswordForgetForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: \"\",\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch((error) => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === \"\";\n\n    return (\n      <MDBContainer>\n        <MDBRow>\n          <MDBCol md=\"4\"></MDBCol>\n          <MDBCol md=\"4\">\n            <MDBCard>\n              <MDBCardBody className=\"mx-4\">\n                <div className=\"text-center\">\n                  <h3 className=\"dark-grey-text mb-5\">\n                    <strong>PasswordForget</strong>\n                  </h3>\n                </div>\n                <MDBInput\n                  name=\"email\"\n                  label=\"Enter your email\"\n                  value={email}\n                  onChange={this.onChange}\n                  group\n                  type=\"email\"\n                  validate\n                />\n                <div className=\"text-center py-3 mt-3\">\n                  <MDBBtn\n                    rounded\n                    onClick={this.onSubmit}\n                    disabled={isInvalid}\n                    outline\n                    color=\"info\"\n                  >\n                    Reset My Password\n                    <MDBIcon far icon=\"paper-plane\" className=\"ml-2\" />\n                  </MDBBtn>\n                </div>\n                <div className=\"text-center\">\n                  {error && <p>{error.message}</p>}\n                </div>\n              </MDBCardBody>\n              <MDBModalFooter className=\"mx-4 pt-3 mb-1\">\n                <p className=\"font-small grey-text d-flex justify-content-end\">\n                  Try sign in?\n                  <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n                </p>\n              </MDBModalFooter>\n            </MDBCard>\n          </MDBCol>\n          <MDBCol md=\"4\"></MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.props.onSetAuthUser(\n        JSON.parse(localStorage.getItem('authUser')),\n      );\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          localStorage.setItem('authUser', JSON.stringify(authUser));\n          this.props.onSetAuthUser(authUser);\n        },\n        () => {\n          localStorage.removeItem('authUser');\n          this.props.onSetAuthUser(null);\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return <Component {...this.props} />;\n    }\n  }\n\n  const mapDispatchToProps = dispatch => ({\n    onSetAuthUser: authUser =>\n      dispatch({ type: 'AUTH_USER_SET', authUser }),\n  });\n\n  return compose(\n    withFirebase,\n    connect(\n      null,\n      mapDispatchToProps,\n    ),\n  )(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n        () => this.props.history.push(ROUTES.SIGN_IN),\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return condition(this.props.authUser) ? (\n        <Component {...this.props} />\n      ) : null;\n    }\n  }\n\n  const mapStateToProps = state => ({\n    authUser: state.sessionState.authUser,\n  });\n\n  return compose(\n    withRouter,\n    withFirebase,\n    connect(mapStateToProps),\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\n\nconst needsEmailVerification = authUser =>\n  authUser &&\n  !authUser.emailVerified &&\n  authUser.providerData\n    .map(provider => provider.providerId)\n    .includes('password');\n\nconst withEmailVerification = Component => {\n  class WithEmailVerification extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = { isSent: false };\n    }\n\n    onSendEmailVerification = () => {\n      this.props.firebase\n        .doSendEmailVerification()\n        .then(() => this.setState({ isSent: true }));\n    };\n\n    render() {\n      return needsEmailVerification(this.props.authUser) ? (\n        <div>\n          {this.state.isSent ? (\n            <p>\n              E-Mail confirmation sent: Check you E-Mails (Spam folder\n              included) for a confirmation E-Mail. Refresh this page\n              once you confirmed your E-Mail.\n            </p>\n          ) : (\n            <p>\n              Verify your E-Mail: Check you E-Mails (Spam folder\n              included) for a confirmation E-Mail or send another\n              confirmation E-Mail.\n            </p>\n          )}\n\n          <button\n            type=\"button\"\n            onClick={this.onSendEmailVerification}\n            disabled={this.state.isSent}\n          >\n            Send confirmation E-Mail\n          </button>\n        </div>\n      ) : (\n        <Component {...this.props} />\n      );\n    }\n  }\n\n  const mapStateToProps = state => ({\n    authUser: state.sessionState.authUser,\n  });\n\n  return compose(\n    withFirebase,\n    connect(mapStateToProps),\n  )(WithEmailVerification);\n};\n\nexport default withEmailVerification;\n","import React, { Component } from 'react';\n\nclass MessageItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editMode: false,\n      editText: this.props.message.text,\n    };\n  }\n\n  onToggleEditMode = () => {\n    this.setState(state => ({\n      editMode: !state.editMode,\n      editText: this.props.message.text,\n    }));\n  };\n\n  onChangeEditText = event => {\n    this.setState({ editText: event.target.value });\n  };\n\n  onSaveEditText = () => {\n    this.props.onEditMessage(this.props.message, this.state.editText);\n\n    this.setState({ editMode: false });\n  };\n\n  render() {\n    const { authUser, message, onRemoveMessage } = this.props;\n    const { editMode, editText } = this.state;\n\n    return (\n      <li>\n        {editMode ? (\n          <input\n            type=\"text\"\n            value={editText}\n            onChange={this.onChangeEditText}\n          />\n        ) : (\n          <span>\n            <strong>{message.userId}</strong> {message.text}\n            {message.editedAt && <span>(Edited)</span>}\n          </span>\n        )}\n\n        {authUser.uid === message.userId && (\n          <span>\n            {editMode ? (\n              <span>\n                <button onClick={this.onSaveEditText}>Save</button>\n                <button onClick={this.onToggleEditMode}>Reset</button>\n              </span>\n            ) : (\n              <button onClick={this.onToggleEditMode}>Edit</button>\n            )}\n\n            {!editMode && (\n              <button\n                type=\"button\"\n                onClick={() => onRemoveMessage(message.uid)}\n              >\n                Delete\n              </button>\n            )}\n          </span>\n        )}\n      </li>\n    );\n  }\n}\n\nexport default MessageItem;\n","import React from 'react';\n\nimport MessageItem from './MessageItem';\n\nconst MessageList = ({\n  authUser,\n  messages,\n  onEditMessage,\n  onRemoveMessage,\n}) => (\n  <ul>\n    {messages.map(message => (\n      <MessageItem\n        authUser={authUser}\n        key={message.uid}\n        message={message}\n        onEditMessage={onEditMessage}\n        onRemoveMessage={onRemoveMessage}\n      />\n    ))}\n  </ul>\n);\n\nexport default MessageList;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport MessageList from './MessageList';\n\nclass Messages extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: '',\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.messages.length) {\n      this.setState({ loading: true });\n    }\n\n    this.onListenForMessages();\n  }\n\n  componentDidUpdate(props) {\n    if (props.limit !== this.props.limit) {\n      this.onListenForMessages();\n    }\n  }\n\n  onListenForMessages = () => {\n    this.props.firebase\n      .messages()\n      .orderByChild('createdAt')\n      .limitToLast(this.props.limit)\n      .on('value', snapshot => {\n        this.props.onSetMessages(snapshot.val());\n\n        this.setState({ loading: false });\n      });\n  };\n\n  componentWillUnmount() {\n    this.props.firebase.messages().off();\n  }\n\n  onChangeText = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  onCreateMessage = (event, authUser) => {\n    this.props.firebase.messages().push({\n      text: this.state.text,\n      userId: authUser.uid,\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n\n    this.setState({ text: '' });\n\n    event.preventDefault();\n  };\n\n  onEditMessage = (message, text) => {\n    const { uid, ...messageSnapshot } = message;\n\n    this.props.firebase.message(message.uid).set({\n      ...messageSnapshot,\n      text,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n  };\n\n  onRemoveMessage = uid => {\n    this.props.firebase.message(uid).remove();\n  };\n\n  onNextPage = () => {\n    this.props.onSetMessagesLimit(this.props.limit + 5);\n  };\n\n  render() {\n    const { messages } = this.props;\n    const { text, loading } = this.state;\n\n    return (\n      <div>\n        {!loading && messages && (\n          <button type=\"button\" onClick={this.onNextPage}>\n            More\n          </button>\n        )}\n\n        {loading && <div>Loading ...</div>}\n\n        {messages && (\n          <MessageList\n            authUser={this.props.authUser}\n            messages={messages}\n            onEditMessage={this.onEditMessage}\n            onRemoveMessage={this.onRemoveMessage}\n          />\n        )}\n\n        {!messages && <div>There are no messages ...</div>}\n\n        <form\n          onSubmit={event =>\n            this.onCreateMessage(event, this.props.authUser)\n          }\n        >\n          <input\n            type=\"text\"\n            value={text}\n            onChange={this.onChangeText}\n          />\n          <button type=\"submit\">Send</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  authUser: state.sessionState.authUser,\n  messages: Object.keys(state.messageState.messages || {}).map(\n    key => ({\n      ...state.messageState.messages[key],\n      uid: key,\n    }),\n  ),\n  limit: state.messageState.limit,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSetMessages: messages =>\n    dispatch({ type: 'MESSAGES_SET', messages }),\n  onSetMessagesLimit: limit =>\n    dispatch({ type: 'MESSAGES_LIMIT_SET', limit }),\n});\n\nexport default compose(\n  withFirebase,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  ),\n)(Messages);\n","import Messages from './Messages';\n\nexport default Messages;\n","import React from 'react';\nimport { compose } from 'recompose';\n\nimport { withAuthorization, withEmailVerification } from '../Session';\nimport Messages from '../Messages';\n\nconst HomePage = () => (\n  <div>\n    <h1>Home Page</h1>\n    <p>The Home Page is accessible by every signed in user.</p>\n\n    <Messages />\n  </div>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n)(HomePage);\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\n\nimport { withAuthorization, withEmailVerification } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\n\nconst SIGN_IN_METHODS = [\n  {\n    id: 'password',\n    provider: null,\n  },\n  {\n    id: 'google.com',\n    provider: 'googleProvider',\n  },\n  {\n    id: 'facebook.com',\n    provider: 'facebookProvider',\n  },\n  {\n    id: 'twitter.com',\n    provider: 'twitterProvider',\n  },\n];\n\nconst AccountPage = ({ authUser }) => (\n  <div>\n    <h1>Account: {authUser.email}</h1>\n    <PasswordChangeForm />\n    <LoginManagement authUser={authUser} />\n  </div>\n);\n\nclass LoginManagementBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeSignInMethods: [],\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSignInMethods();\n  }\n\n  fetchSignInMethods = () => {\n    this.props.firebase.auth\n      .fetchSignInMethodsForEmail(this.props.authUser.email)\n      .then(activeSignInMethods =>\n        this.setState({ activeSignInMethods, error: null }),\n      )\n      .catch(error => this.setState({ error }));\n  };\n\n  onSocialLoginLink = provider => {\n    this.props.firebase.auth.currentUser\n      .linkWithPopup(this.props.firebase[provider])\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onDefaultLoginLink = password => {\n    const credential = this.props.firebase.emailAuthProvider.credential(\n      this.props.authUser.email,\n      password,\n    );\n\n    this.props.firebase.auth.currentUser\n      .linkAndRetrieveDataWithCredential(credential)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onUnlink = providerId => {\n    this.props.firebase.auth.currentUser\n      .unlink(providerId)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  render() {\n    const { activeSignInMethods, error } = this.state;\n\n    return (\n      <div>\n        Sign In Methods:\n        <ul>\n          {SIGN_IN_METHODS.map(signInMethod => {\n            const onlyOneLeft = activeSignInMethods.length === 1;\n            const isEnabled = activeSignInMethods.includes(\n              signInMethod.id,\n            );\n\n            return (\n              <li key={signInMethod.id}>\n                {signInMethod.id === 'password' ? (\n                  <DefaultLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onDefaultLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                ) : (\n                  <SocialLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onSocialLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                )}\n              </li>\n            );\n          })}\n        </ul>\n        {error && error.message}\n      </div>\n    );\n  }\n}\n\nconst SocialLoginToggle = ({\n  onlyOneLeft,\n  isEnabled,\n  signInMethod,\n  onLink,\n  onUnlink,\n}) =>\n  isEnabled ? (\n    <button\n      type=\"button\"\n      onClick={() => onUnlink(signInMethod.id)}\n      disabled={onlyOneLeft}\n    >\n      Deactivate {signInMethod.id}\n    </button>\n  ) : (\n    <button\n      type=\"button\"\n      onClick={() => onLink(signInMethod.provider)}\n    >\n      Link {signInMethod.id}\n    </button>\n  );\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { passwordOne: '', passwordTwo: '' };\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    this.props.onLink(this.state.passwordOne);\n    this.setState({ passwordOne: '', passwordTwo: '' });\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      onlyOneLeft,\n      isEnabled,\n      signInMethod,\n      onUnlink,\n    } = this.props;\n\n    const { passwordOne, passwordTwo } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return isEnabled ? (\n      <button\n        type=\"button\"\n        onClick={() => onUnlink(signInMethod.id)}\n        disabled={onlyOneLeft}\n      >\n        Deactivate {signInMethod.id}\n      </button>\n    ) : (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n\n        <button disabled={isInvalid} type=\"submit\">\n          Link {signInMethod.id}\n        </button>\n      </form>\n    );\n  }\n}\n\nconst LoginManagement = withFirebase(LoginManagementBase);\n\nconst mapStateToProps = state => ({\n  authUser: state.sessionState.authUser,\n});\n\nconst condition = authUser => !!authUser;\n\nexport default compose(\n  connect(mapStateToProps),\n  withEmailVerification,\n  withAuthorization(condition),\n)(AccountPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.users.length) {\n      this.setState({ loading: true });\n    }\n\n    this.props.firebase.users().on('value', snapshot => {\n      this.props.onSetUsers(snapshot.val());\n\n      this.setState({ loading: false });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    const { users } = this.props;\n    const { loading } = this.state;\n\n    return (\n      <div>\n        <h2>Users</h2>\n        {loading && <div>Loading ...</div>}\n        <ul>\n          {users.map(user => (\n            <li key={user.uid}>\n              <span>\n                <strong>ID:</strong> {user.uid}\n              </span>\n              <span>\n                <strong>E-Mail:</strong> {user.email}\n              </span>\n              <span>\n                <strong>Username:</strong> {user.username}\n              </span>\n              <span>\n                <Link to={`${ROUTES.ADMIN}/${user.uid}`}>\n                  Details\n                </Link>\n              </span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: Object.keys(state.userState.users || {}).map(key => ({\n    ...state.userState.users[key],\n    uid: key,\n  })),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSetUsers: users => dispatch({ type: 'USERS_SET', users }),\n});\n\nexport default compose(\n  withFirebase,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  ),\n)(UserList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\n\nclass UserItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.user) {\n      this.setState({ loading: true });\n    }\n\n    this.props.firebase\n      .user(this.props.match.params.id)\n      .on('value', snapshot => {\n        this.props.onSetUser(\n          snapshot.val(),\n          this.props.match.params.id,\n        );\n\n        this.setState({ loading: false });\n      });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.user(this.props.match.params.id).off();\n  }\n\n  onSendPasswordResetEmail = () => {\n    this.props.firebase.doPasswordReset(this.props.user.email);\n  };\n\n  render() {\n    const { user } = this.props;\n    const { loading } = this.state;\n\n    return (\n      <div>\n        <h2>User ({this.props.match.params.id})</h2>\n        {loading && <div>Loading ...</div>}\n\n        {user && (\n          <div>\n            <span>\n              <strong>ID:</strong> {user.uid}\n            </span>\n            <span>\n              <strong>E-Mail:</strong> {user.email}\n            </span>\n            <span>\n              <strong>Username:</strong> {user.username}\n            </span>\n            <span>\n              <button\n                type=\"button\"\n                onClick={this.onSendPasswordResetEmail}\n              >\n                Send Password Reset\n              </button>\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => ({\n  user: (state.userState.users || {})[props.match.params.id],\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSetUser: (user, uid) => dispatch({ type: 'USER_SET', user, uid }),\n});\n\nexport default compose(\n  withFirebase,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  ),\n)(UserItem);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withAuthorization, withEmailVerification } from '../Session';\nimport { UserList, UserItem } from '../Users';\nimport * as ROLES from '../../constants/roles';\nimport * as ROUTES from '../../constants/routes';\n\nconst AdminPage = () => (\n  <div>\n    <h1>Admin</h1>\n    <p>The Admin Page is accessible by every signed in admin user.</p>\n\n    <Switch>\n      <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} />\n      <Route exact path={ROUTES.ADMIN} component={UserList} />\n    </Switch>\n  </div>\n);\n\nconst condition = authUser =>\n  authUser && !!authUser.roles[ROLES.ADMIN];\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n)(AdminPage);\n","import React from 'react';\n\nconst UserGuidePage = () => (\n  <div>\n    <h1>Tutorial Page</h1>\n  </div>\n);\n\nexport default UserGuidePage;","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Navigation from \"../Navigation\";\nimport LandingPage from \"../Landing\";\nimport SignUpPage from \"../SignUp\";\nimport TermsPage from \"../TAC\";\nimport SignInPage from \"../SignIn\";\nimport PasswordForgetPage from \"../PasswordForget\";\nimport HomePage from \"../Home\";\nimport AccountPage from \"../Account\";\nimport AdminPage from \"../Admin\";\nimport * as ROUTES from \"../../constants/routes\";\nimport { withAuthentication } from \"../Session\";\nimport UserGuidePage from \"../UserGuide\";\n\nconst App = () => (\n  <div>\n      <Router>\n        <div>\n          <Navigation />\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={ROUTES.TAC} component={TermsPage} />\n          <Route path={ROUTES.USER_GUIDE} component={UserGuidePage} />\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n          <Route path={ROUTES.HOME} component={HomePage} />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </div>\n      </Router>\n  </div>\n);\n\nexport default withAuthentication(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nimport store from './store';\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}